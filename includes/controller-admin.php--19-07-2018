<?php

##### DATA PROCESSING #####
// LOGOUT
if ($route == "logout")
    logOut($lia['id']);

// ASSETS
if (isset($_POST['addAsset'])) {
	
	
    $status = addAsset($_POST, $_FILES);
    header("Location:?route=" . $_POST['route'] . "&id=" . $_POST['routeid'] . "&status=" . $status);
}
if (isset($_POST['editAsset'])) {
    $status = editAsset($_POST, $_FILES);
    header("Location:?route=" . $_POST['route'] . "&id=" . $_POST['routeid'] . "&status=" . $status . "&section=" . $_POST['section']);
}
if (isset($_POST['deleteAsset'])) {
    $status = deleteAsset($_POST['id']);
    header("Location:?route=" . $_POST['route'] . "&id=" . $_POST['routeid'] . "&status=" . $status . "&section=" . $_POST['section']);
}


// warranty
if (isset($_POST['addwarranty'])) {
    $status = addwarranty($_POST, $_FILES);
    header("Location:?route=warranty&status=" . $status);
}
if (isset($_POST['editwarranty'])) {
    $status = editwarranty($_POST, $_FILES);
    header("Location:?route=" . $_POST['route'] . "&id=" . $_POST['routeid'] . "&status=" . $status . "&section=" . $_POST['section']);
}
if (isset($_POST['deletewarranty'])) {
    $status = deletewarranty($_POST['id']);
    header("Location:?route=" . $_POST['route'] . "&status=" . $status);
}

if (isset($_POST['addwrntyhistory'])) {
    $status = addwrntyhistory($_POST, $_FILES);
     header("Location:?route=" . $_POST['route'] . "&id=" . $_POST['routeid'] . "&status=" . $status . "&section=" . $_POST['section']);
}

if (isset($_POST['editwrntyhistory'])) {
    $status = editwrntyhistory($_POST, $_FILES);
    header("Location:?route=" . $_POST['route'] . "&id=" . $_POST['routeid'] . "&status=" . $status . "&section=" . $_POST['section']);
}

if (isset($_POST['deletewrntyhistry'])) {
    $status = deletewrntyhistry($_POST['id']);
    header("Location:?route=" . $_POST['route'] . "&id=" . $_POST['routeid'] . "&status=" . $status . "&section=" . $_POST['section']);
}

// CONTRACT
if (isset($_POST['addContract'])) {
    $status = addContract($_POST, $_FILES);
    header("Location:?route=clients/manage&id=" . $_POST['routeid'] . "&status=" . $status);
}
if (isset($_POST['editContract'])) {
    $status = editContract($_POST);
    header("Location:?route=clients/manage&id=" . $_POST['routeid'] . "&status=" . $status);
}
if (isset($_POST['deleteContract'])) {
    $status = deleteContract($_POST['id']);
	$section = "";
    header("Location:?route=" . $_POST['route'] . "&id=" . $_POST['routeid'] . "&status=" . $status . "&section=''");
}

if (isset($_POST['editContractHistory'])) {
    $status = editContractHistory($_POST);
    header("Location:?route=" . $_POST['route'] . "&id=" . $_POST['routeid'] . "&status=" . $status . "&section=" . $_POST['section']);
}
if (isset($_POST['deleteContractHistory'])) {
    $status = deleteContractHistory($_POST['id']);
    header("Location:?route=" . $_POST['route'] . "&id=" . $_POST['routeid'] . "&status=" . $status . "&section=" . $_POST['section']);
}

// PROJECTS
if (isset($_POST['addProject'])) {
    $status = addProject($_POST);
    header("Location:?route=" . $_POST['route'] . "&id=" . $_POST['routeid'] . "&status=" . $status . "&section=" . $_POST['section']);
}
if (isset($_POST['editProject'])) {
    $status = editProject($_POST);
    header("Location:?route=" . $_POST['route'] . "&id=" . $_POST['routeid'] . "&status=" . $status . "&section=" . $_POST['section']);
}
if (isset($_POST['deleteProject'])) {
    $status = deleteProject($_POST['id']);
    header("Location:?route=" . $_POST['route'] . "&id=" . $_POST['routeid'] . "&status=" . $status . "&section=" . $_POST['section']);
}

if (isset($_POST['addProjectAdmin'])) {
    $status = addProjectAdmin($_POST);
    header("Location:?route=" . $_POST['route'] . "&id=" . $_POST['routeid'] . "&status=" . $status);
}
if (isset($_POST['deleteProjectAdmin'])) {
    $status = deleteProjectAdmin($_POST['id']);
    header("Location:?route=" . $_POST['route'] . "&id=" . $_POST['routeid'] . "&status=" . $status);
}

if (isset($_POST['saveProjectNotes'])) {
    $status = saveProjectNotes($_POST);
    header("Location:?route=" . $_POST['route'] . "&id=" . $_POST['routeid'] . "&status=" . $status . "&section=" . $_POST['section']);
}

// FILES
if (isset($_POST['uploadContractFile'])) {
    $status = uploadContractFile($_POST, $_FILES);
    header("Location:?route=" . $_POST['route'] . "&id=" . $_POST['routeid'] . "&status=" . $status . "&section=" . $_POST['section']);
}
if (isset($_POST['deleteContractFile'])) {
    $status = deleteContractFile($_POST['id']);
    header("Location:?route=" . $_POST['route'] . "&id=" . $_POST['routeid'] . "&status=" . $status . "&section=" . $_POST['section']);
}
if (isset($_POST['uploadFile'])) {
    $status = uploadFile($_POST, $_FILES);
    header("Location:?route=" . $_POST['route'] . "&id=" . $_POST['routeid'] . "&status=" . $status . "&section=" . $_POST['section']);
}
if (isset($_POST['deleteFile'])) {
    $status = deleteFile($_POST['id']);
    header("Location:?route=" . $_POST['route'] . "&id=" . $_POST['routeid'] . "&status=" . $status . "&section=" . $_POST['section']);
}

// ISSUES
if (isset($_POST['addIssue'])) {
    $status = addIssue($_POST);
    header("Location:?route=" . $_POST['route'] . "&id=" . $_POST['routeid'] . "&status=" . $status . "&section=" . $_POST['section']);
}
if (isset($_POST['editIssue'])) {
    $status = editIssue($_POST);
    header("Location:?route=" . $_POST['route'] . "&id=" . $_POST['routeid'] . "&status=" . $status . "&section=" . $_POST['section']);
}
if (isset($_POST['deleteIssue'])) {
    $status = deleteIssue($_POST['id']);
    header("Location:?route=" . $_POST['route'] . "&id=" . $_POST['routeid'] . "&status=" . $status . "&section=" . $_POST['section']);
}
///kb

// if (isset($_POST['action'])) {
	
	// echo'<pre>';
	// print_r($_POST);
	// echo'</pre>';
	// die('rhttt');
    // $status = action($_POST);
	

	
	
	
    // header("Location:?route=" . $_POST['route'] . "&id=" . $_POST['routeid'] . "&status=" . $status . "&section=" . $_POST['section']);
// }

// USAGES
if (isset($_POST['addUsage'])) {
    $status = addUsage($_POST);
    header("Location:?route=" . $_POST['route'] . "&id=" . $_POST['routeid'] . "&status=" . $status . "&section=" . $_POST['section']);
}
if (isset($_POST['editUsage'])) {
    $status = editUsage($_POST);
    header("Location:?route=" . $_POST['route'] . "&id=" . $_POST['routeid'] . "&status=" . $status . "&section=" . $_POST['section']);
}
if (isset($_POST['deleteUsage'])) {
    $status = deleteUsage($_POST['id']);
    header("Location:?route=" . $_POST['route'] . "&id=" . $_POST['routeid'] . "&status=" . $status . "&section=" . $_POST['section']);
}



// TICKETS
if (isset($_POST['addTicket'])) {
    $status = addTicket($_POST);
    header("Location:?route=" . $_POST['route'] . "&id=" . $_POST['routeid'] . "&status=" . $status . "&section=" . $_POST['section']);
}
if (isset($_POST['editTicket'])) {
    $status = editTicket($_POST, $_FILES);
    header("Location:?route=" . $_POST['route'] . "&id=" . $_POST['routeid'] . "&status=" . $status . "&section=" . $_POST['section']);
}
if (isset($_POST['deleteTicket'])) {
    $status = deleteTicket($_POST['id']);
    header("Location:?route=" . $_POST['route'] . "&id=" . $_POST['routeid'] . "&status=" . $status . "&section=" . $_POST['section']);
}
if (isset($_POST['updateTicketNotes'])) {
    $status = updateTicketNotes($_POST);
    header("Location:?route=" . $_POST['route'] . "&id=" . $_POST['routeid'] . "&status=" . $status);
}
if (isset($_POST['addTicketReply'])) {
    $status = addTicketReply($_POST, $_FILES);
    header("Location:?route=" . $_POST['route'] . "&id=" . $_POST['routeid'] . "&status=" . $status);
}
// contractconsume
if (isset($_POST['adcontractconsum'])) {
    $status = adcontractconsum($_POST);
    header("Location:?route=" . $_POST['route'] . "&id=" . $_POST['routeid'] . "&status=" . $status . "&section=" . $_POST['section']);
}
if (isset($_POST['edtcontractconsum'])) {
    $status = edtcontractconsum($_POST);
    header("Location:?route=" . $_POST['route'] . "&id=" . $_POST['routeid'] . "&status=" . $status . "&section=" . $_POST['section']);
}
if (isset($_POST['deletecontractConsumable'])) {
    $status = deletecontractConsumable($_POST['id']);
    header("Location:?route=" . $_POST['route'] . "&id=" . $_POST['routeid'] . "&status=" . $status . "&section=" . $_POST['section']);
}
// CREDENTIALS
if (isset($_POST['addCredential'])) {
    $status = addCredential($_POST);
    header("Location:?route=" . $_POST['route'] . "&id=" . $_POST['routeid'] . "&status=" . $status . "&section=" . $_POST['section']);
}
if (isset($_POST['editCredential'])) {
    $status = editCredential($_POST);
    header("Location:?route=" . $_POST['route'] . "&id=" . $_POST['routeid'] . "&status=" . $status . "&section=" . $_POST['section']);
}
if (isset($_POST['deleteCredential'])) {
    $status = deleteCredential($_POST['id']);
    header("Location:?route=" . $_POST['route'] . "&id=" . $_POST['routeid'] . "&status=" . $status . "&section=" . $_POST['section']);
}

// LICENSES
if (isset($_POST['addLicense'])) {
    $status = addLicense($_POST);
	$section ="licenses";
    header("Location:". $_POST['refral']. "&status=" . $status);
}
if (isset($_POST['editLicense'])) {
    $status = editLicense($_POST);
    header("Location:?route=" . $_POST['route'] . "&id=" . $_POST['routeid'] . "&status=" . $status . "&section=" . $_POST['section']);
}
if (isset($_POST['deleteLicense'])) {
    $status = deleteLicense($_POST['id']);
    header("Location:?route=" . $_POST['route'] . "&id=" . $_POST['routeid'] . "&status=" . $status . "&section=" . $_POST['section']);
}

if (isset($_POST['addLicenseAssignment'])) {
    $status = addLicenseAssignment($_POST);
    header("Location:?route=" . $_POST['route'] . "&id=" . $_POST['routeid'] . "&status=" . $status);
}
if (isset($_POST['deleteLicenseAssignment'])) {
    $status = deleteLicenseAssignment($_POST['id']);
    header("Location:?route=" . $_POST['route'] . "&id=" . $_POST['routeid'] . "&status=" . $status);
}

// CLIENTS
if (isset($_POST['addClient'])) {
    $status = addClient($_POST);
    header("Location:?route=" . $_POST['route'] . "&id=" . $_POST['routeid'] . "&status=" . $status);
}
if (isset($_POST['editClient'])) {
    $status = editClient($_POST);
    header("Location:?route=" . $_POST['route'] . "&id=" . $_POST['routeid'] . "&status=" . $status);
}
if (isset($_POST['deleteClient'])) {
    $status = deleteClient($_POST['id']);
    header("Location:?route=" . $_POST['route'] . "&id=" . $_POST['routeid'] . "&status=" . $status);
}
if (isset($_POST['addinvoice'])) {
    $status = addinvoice($_POST, $_FILES);
    header("Location:?route=clients/manage&id=" . $_POST['clintid'] ."&section=invoice&status=" . $status);
}
if (isset($_POST['invoiceedit'])) {
    $status = invoiceedit($_POST, $_FILES);
    header("Location:?route=clients/manage&id=" . $_POST['clintid'] ."&section=invoice&status=" . $status);
}
if (isset($_POST['deleteinvoice'])) {
    $status = deleteinvoice($_POST['id']);
    header("Location:?route=" . $_POST['route'] . "&id=" . $_POST['routeid'] . "&status=" . $status . "&section=" . $_POST['section']);
}


// MONITORING
if (isset($_POST['addHost'])) {
    $status = addHost($_POST);
    header("Location:?route=" . $_POST['route'] . "&id=" . $_POST['routeid'] . "&status=" . $status);
}
if (isset($_POST['editHost'])) {
    $status = editHost($_POST);
    header("Location:?route=" . $_POST['route'] . "&id=" . $_POST['routeid'] . "&status=" . $status);
}
if (isset($_POST['deleteHost'])) {
    $status = deleteHost($_POST['id']);
    header("Location:?route=" . $_POST['route'] . "&id=" . $_POST['routeid'] . "&status=" . $status);
}

if (isset($_POST['addCheck'])) {
    $status = addCheck($_POST);
    header("Location:?route=" . $_POST['route'] . "&id=" . $_POST['routeid'] . "&status=" . $status);
}
if (isset($_POST['editCheck'])) {
    $status = editCheck($_POST);
    header("Location:?route=" . $_POST['route'] . "&id=" . $_POST['routeid'] . "&status=" . $status);
}
if (isset($_POST['deleteCheck'])) {
    $status = deleteCheck($_POST['id']);
    header("Location:?route=" . $_POST['route'] . "&id=" . $_POST['routeid'] . "&status=" . $status);
}

if (isset($_POST['addHostPeople'])) {
    $status = addHostPeople($_POST);
    header("Location:?route=" . $_POST['route'] . "&id=" . $_POST['routeid'] . "&status=" . $status);
}
if (isset($_POST['deleteHostPeople'])) {
    $status = deleteHostPeople($_POST['id']);
    header("Location:?route=" . $_POST['route'] . "&id=" . $_POST['routeid'] . "&status=" . $status);
}

// USERS
if (isset($_POST['addUser'])) {
    $status = addUser($_POST);
    header("Location:?route=" . $_POST['route'] . "&id=" . $_POST['routeid'] . "&status=" . $status . "&section=" . $_POST['section']);
}
if (isset($_POST['editUser'])) {
    $status = editUser($_POST);
    header("Location:?route=" . $_POST['route'] . "&id=" . $_POST['routeid'] . "&status=" . $status);
}
if (isset($_POST['deleteUser'])) {
    $status = deleteUser($_POST['id']);
    header("Location:?route=" . $_POST['route'] . "&id=" . $_POST['routeid'] . "&status=" . $status . "&section=" . $_POST['section']);
}

// ADMINS
if (isset($_POST['addAdmin'])) {
    $status = addAdmin($_POST);
    header("Location:?route=" . $_POST['route'] . "&id=" . $_POST['routeid'] . "&status=" . $status);
}
if (isset($_POST['editAdmin'])) {
    $status = editAdmin($_POST);
    header("Location:?route=" . $_POST['route'] . "&id=" . $_POST['routeid'] . "&status=" . $status);
}
if (isset($_POST['deleteAdmin'])) {
    $status = deleteAdmin($_POST['id']);
    header("Location:?route=" . $_POST['route'] . "&id=" . $_POST['routeid'] . "&status=" . $status);
}

if (isset($_POST['addAdminAssignment'])) {
    $status = addAdminAssignment($_POST);
    header("Location:?route=" . $_POST['route'] . "&id=" . $_POST['routeid'] . "&status=" . $status);
}
if (isset($_POST['deleteAdminAssignment'])) {
    $status = deleteAdminAssignment($_POST['id']);
    header("Location:?route=" . $_POST['route'] . "&id=" . $_POST['routeid'] . "&status=" . $status);
}

// ASSET CATEGORIES
if (isset($_POST['addAssetCategory'])) {
    $status = addAssetCategory($_POST);
    header("Location:?route=" . $_POST['route'] . "&id=" . $_POST['routeid'] . "&status=" . $status);
}
if (isset($_POST['editAssetCategory'])) {
    $status = editAssetCategory($_POST);
    header("Location:?route=" . $_POST['route'] . "&id=" . $_POST['routeid'] . "&status=" . $status);
}
if (isset($_POST['deleteAssetCategory'])) {
    $status = deleteAssetCategory($_POST['id']);
    header("Location:?route=" . $_POST['route'] . "&id=" . $_POST['routeid'] . "&status=" . $status);
}

// CONTRACT TYPE
if (isset($_POST['addContractType'])) {
    $status = addContractType($_POST);
    header("Location:?route=" . $_POST['route'] . "&id=" . $_POST['routeid'] . "&status=" . $status);
}
if (isset($_POST['editContractType'])) {
    $status = editContractType($_POST);
    header("Location:?route=" . $_POST['route'] . "&id=" . $_POST['routeid'] . "&status=" . $status);
}
if (isset($_POST['deleteContractType'])) {
    $status = deleteContractType($_POST['id']);
    header("Location:?route=" . $_POST['route'] . "&id=" . $_POST['routeid'] . "&status=" . $status);
}

// CONTRACT USAGES
if (isset($_POST['addContractUsage'])) {
    $status = addContractUsage($_POST);
    header("Location:?route=" . $_POST['route'] . "&id=" . $_POST['routeid'] . "&status=" . $status . "&section=" . $_POST['section']);
}
if (isset($_POST['editContractUsage'])) {
    $status = editContractUsage($_POST);
    header("Location:?route=" . $_POST['route'] . "&id=" . $_POST['routeid'] . "&status=" . $status . "&section=" . $_POST['section']);
}
if (isset($_POST['editassetUsage'])) {
    $status = editassetUsage($_POST);
    header("Location:?route=" . $_POST['route'] . "&cid=" . $_POST['cid'] . "&oaid=" . $_POST['oaid'] . "&coid=" . $_POST['coid'] . "&status=" . $status);
}
if (isset($_POST['deleteContractUsage'])) {
    $status = deleteContractUsage($_POST['id']);
    header("Location:?route=" . $_POST['route'] . "&id=" . $_POST['routeid'] . "&status=" . $status . "&section=" . $_POST['section']);
}

// LICENSE TYPES
if (isset($_POST['addLicenseCategory'])) {
    $status = addLicenseCategory($_POST);
    header("Location:?route=" . $_POST['route'] . "&id=" . $_POST['routeid'] . "&status=" . $status);
}
if (isset($_POST['editLicenseCategory'])) {
    $status = editLicenseCategory($_POST);
    header("Location:?route=" . $_POST['route'] . "&id=" . $_POST['routeid'] . "&status=" . $status);
}
if (isset($_POST['deleteLicenseCategory'])) {
    $status = deleteLicenseCategory($_POST['id']);
    header("Location:?route=" . $_POST['route'] . "&id=" . $_POST['routeid'] . "&status=" . $status);
}

// STATUS LABELS
if (isset($_POST['addLabel'])) {
    $status = addLabel($_POST);
    header("Location:?route=" . $_POST['route'] . "&id=" . $_POST['routeid'] . "&status=" . $status);
}
if (isset($_POST['editLabel'])) {
    $status = editLabel($_POST);
    header("Location:?route=" . $_POST['route'] . "&id=" . $_POST['routeid'] . "&status=" . $status);
}
if (isset($_POST['deleteLabel'])) {
    $status = deleteLabel($_POST['id']);
    header("Location:?route=" . $_POST['route'] . "&id=" . $_POST['routeid'] . "&status=" . $status);
}

// ticketsubjectAdd
if (isset($_POST['addticketsubject'])) {
    $status = addticketsubject($_POST);
    header("Location:?route=" . $_POST['route'] . "&status=" . $status);
}
if (isset($_POST['editticketsubject'])) {
    $status = editticketsubject($_POST);
    header("Location:?route=" . $_POST['route'] . "&status=" . $status);
}
if (isset($_POST['deleteticketsubject'])) {
    $status = deleteticketsubject($_POST['id']);
    header("Location:?route=" . $_POST['route'] . "&status=" . $status);
}
// WAREHOUSEaddwarehouse
if (isset($_POST['addwarehouse'])) {
    $status = addwarehouse($_POST);
    header("Location:?route=" . $_POST['route'] . "&id=" . $_POST['routeid'] . "&status=" . $status);
}
if (isset($_POST['editwarehouse'])) {
    $status = editwarehouse($_POST);
    header("Location:?route=" . $_POST['route'] . "&id=" . $_POST['routeid'] . "&status=" . $status);
}
if (isset($_POST['deletewarehouse'])) {
    $status = deletewarehouse($_POST['id']);
    header("Location:?route=" . $_POST['route'] . "&id=" . $_POST['routeid'] . "&status=" . $status);
}
// Consumable
if (isset($_POST['addconsumable'])) {
    $status = addconsumable($_POST);
    header("Location:?route=" . $_POST['route'] . "&id=" . $_POST['routeid'] . "&status=" . $status);
}
if (isset($_POST['editconsumable'])) {
    $status = editconsumable($_POST);
    header("Location:?route=" . $_POST['route'] . "&id=" . $_POST['routeid'] . "&status=" . $status);
}
if (isset($_POST['deleteconsumable'])) {
    $status = deleteconsumable($_POST['id']);
    header("Location:?route=" . $_POST['route'] . "&id=" . $_POST['routeid'] . "&status=" . $status);
}


// MANUFACTURERS
if (isset($_POST['addManufacturer'])) {
    $status = addManufacturer($_POST);
    header("Location:?route=" . $_POST['route'] . "&id=" . $_POST['routeid'] . "&status=" . $status);
}
if (isset($_POST['editManufacturer'])) {
    $status = editManufacturer($_POST);
    header("Location:?route=" . $_POST['route'] . "&id=" . $_POST['routeid'] . "&status=" . $status);
}
if (isset($_POST['deleteManufacturer'])) {
    $status = deleteManufacturer($_POST['id']);
    header("Location:?route=" . $_POST['route'] . "&id=" . $_POST['routeid'] . "&status=" . $status);
}
if (isset($_POST['pullout'])) {
	// echo'<pre>';
	// print_r($_POST);
	// echo'</pre>';
	// die('rhttt');

	$serstats = $_POST['serstats'];
	$cid = $_POST['cid'];
	$coid = $_POST['coid'];
	$oaid = $_POST['oaid'];
	$assetid = $_POST['assetid'];
	$isend = 1;
	global $database;
	$dat = date('Y-m-d');
	$tmemo = $_POST['tmemo'];
	$asset =getTableFiltered("asstes","id",$oaid);
	$modelid = getSingleValue("assets","modelid",$oaid);
     $modelname = getSingleValue("models","name",$modelid);
     $asset_serial = getSingleValue("assets","serial",$oaid);
	$fullname = getSingleValue("assets","tag",$oaid). " : " . $modelname . " : " . $asset_serial ;
	

	$database->update("contract_history", [
            "memo" => $tmemo,
            "pulledoutdate" => date('Y-m-d'),
            "maintenance" => '',
			"isend" => '1',
        ],["contractid" => $coid,"assetid" => $oaid]);
	
	$database->update("contract", ["is_end" => $isend ,"clientid"=>$cid,"contract_expiry" => $dat,"endasset"=> $fullname,"endsku"=>$asset['sku'],"statusid" => 2], ["id" => $coid]);
	
	if($assetid == "repair"){
		
	$database->update("assets", ["clientid"=>'0',"statusid" => $serstats,"status"=>"Under Repair"], ["id" => $oaid]);

	}elseif($assetid == "disposal"){

	$database->update("assets", ["clientid"=>'0',"statusid" => $serstats,"status"=>"For Disposal"], ["id" => $oaid]);

	}else{

	$database->update("assets", ["warehouseid" => $_POST['assetid'],"clientid"=>'0',"statusid" => $serstats,"status"=>"Available"], ["id" => $oaid]);

	}
	
	 header("Location: ?route=clients/manage&id=".$cid);
	 
}

if (isset($_POST['assetstatuschange'])) {
	$oaid = $_POST['oaid'];
	$labelid = $_POST['labelid'];
	 global $database;
	 
	$database->update("assets", ["statusid" => $labelid], ["id" => $oaid]);
	
	
	
    header("Location: ?route=assets/warehouse");
	
	
}

// if (isset($_POST['assetlocationchange'])) {
	
	// $allasets =	getTable("assets");
	
	// foreach($allasets as $asset){
		
		// genratebarcode($asset['sku'],$asset['id']);
		
	// }
	
	
// }

if (isset($_POST['assetlocationchange'])) {
	$oaid = $_POST['oaid'];
	$warehouseid = $_POST['warehouseid'];
	 global $database;
	
	//genratebarcode('345365','0');
	
	$database->update("assets", ["warehouseid" => $warehouseid], ["id" => $oaid]);
	
    header("Location: ?route=assets/warehouse");
	
	
}

///addkb
if(isset($_POST['action'])){
	
	
	
	$name = $_POST['name'];
	$clients = $_POST['clients'];
	
	global $database;
	
	
	
$kbcata	=$database->insert("kb_categories", [
	"clients" => $clients , 
       "name" => $name]);
	
	 header("Location: ?route=kb&clients=".$clients."&reroute=kb&name=".$name);
	
   

}

//edit kb
if(isset($_POST['kbedit'])){
	
	
	
	$name = $_POST['name'];
	$id = $_POST['routeid'];
	$clients = $_POST['clients'];
	
	global $database;
	
	
	
$kbcata	=$database->update("kb_categories", [
	"clients" => $clients ,  "name" => $name], ["id" => $id]);
	
	 header("Location: ?route=kb&clients=".$clients."&reroute=kb&name=".$name);
	
  

}

//Delete Kb
if (isset($_POST['deleteKBCategory'])) {
	
	$id = $_POST['id'];
    	global $database;
	$kbcata	=$database->delete("kb_categories",["id" => $id]);
    header("Location: ?route=kb&clients=".$clients."&reroute=kb&name=".$name);
}

//Add article

if(isset($_POST['addArticle'])){
	
	
	
	$name = $_POST['name'];
	$categoryid = $_POST['categoryid'];
	$clients = $_POST['clients'];
	$content = $_POST['content'];
	
	global $database;
	
	
	
$kbcata	=$database->insert("kb_articles", [
	"categoryid" => $categoryid , 
       "clients" => $clients,
       "name" => $name,
       "content" => $content
	   ]);
	
	 header("Location: ?route=kb&clients=".$clients."&reroute=kb&name=".$name);
	
  

}

//Edit Article

if(isset($_POST['editArticle'])){
	
	// echo'<pre>';
	// print_r($_POST);
	// echo'</pre>';die('kljhbcfvb');
	$id=$_POST['id'];
	$name = $_POST['name'];
	$categoryid = $_POST['categoryid'];
	$clients = $_POST['clients'];
	$content = $_POST['content'];
	
	global $database;
	
	
	
$kbcata	=$database->update("kb_articles", [
	"categoryid" => $categoryid , 
       "clients" => $clients,
       "name" => $name,
       "content" => $content
	   ], ["id" => $id]);
	
	 header("Location: ?route=kb&clients=".$clients."&reroute=kb&name=".$name);
	
  

}

//Delete Article

if (isset($_POST['deleteKBarticle'])) {
	
	$id = $_POST['id'];
    	global $database;
	$kbcata	=$database->delete("kb_articles",["id" => $id]);
    header("Location: ?route=kb&clients=".$clients."&reroute=kb&name=".$name);
}




	// $historyid = $database->insert("contract_history", [
        // "contractid" => $coid,
        // "assetid" => $assetid,
        // "memo" => "Newly Deployed",
        // "deployeddate" => date('Y-m-d'),
        // "notes" => "Newly Deployed"
    // ]);









if (isset($_POST['replaceasset'])) {
	
	
	$oaid = $_POST['oaid'];			// oldasset id
    $cid = $_POST['cid'];			// client id
	$coid = $_POST['coid'];			// contract id
	$assetid = $_POST['assetid'];	// new asset id
	
	$contr = getRowById("contract", $_GET['coid']);
	$contrug = getTableFiltereddc("contract_usages", "contractid", $coid, "assetid", $oaid);
	$contrugg = $contrug[0];
	
	// echo'<pre>';
	// print_r($_POST);
	// echo'</pre>';
	// die('ffdfg');
	
	 global $database; 
	
	$database->update("assets", ["clientid" => $cid,"statusid" => $_POST['resson'],"status" => "For Pullout"], ["id" => $oaid]);
	
	$hiryid = $database->insert("contract", [
        "contractno" => $contr['contractno'],
        "assetid" => $contr['assetid'],
        "clientid" => $contr['clientid'],
        "statusid" => 8,
        "memo" => $contr['memo'],
        "is_end" => "1",
        "endasset" => "Replace",
        "created_date" => $contr['created_date']
    ]);
	$newww = $database->insert("contract_usages", [
        "clientid" => $contrugg['clientid'],
        "contractid" => $hiryid,
        "assetid" => $contrugg['assetid'],
        "startdate" => $contrugg['startdate'],
        "enddate" => $contrugg['enddate'],
        "checkeddate" => $contrugg['checkeddate'],
        "scolora3" => $contrugg['scolora3'],
        "scolora4" => $contrugg['scolora4'],
        "sblacka3" => $contrugg['sblacka3'],
        "sblacka4" => $contrugg['sblacka4'],
        "ecolora3" => $contrugg['ecolora3'],
        "ecolora4" => $contrugg['ecolora4'],
        "eblacka3" => $contrugg['eblacka3'],
        "eblacka4" => $contrugg['eblacka4'],
        "tcolora3" => $contrugg['tcolora3'],
        "tcolora4" => $contrugg['tcolora4'],
        "tblacka3" => $contrugg['tblacka3'],
        "tblacka4" => $contrugg['tblacka4'],
        "statusid" => "Replaced Contract",
        "description" => "Replaced Contract"
    ]);
	
    $historyid = $database->update("contract_history", [
        "memo" => "For Pull Out",
        "pulledoutdate" => date('Y-m-d'),
		"memo" => "Newly Replaced",
        "notes" => "Newly Replaced"
    ], ["contractid" => $coid, "assetid" => $oaid]);
	
	$historyid = $database->insert("contract_history", [
        "contractid" => $coid,
        "assetid" => $assetid,
        "memo" => "Newly Deployed",
        "deployeddate" => date('Y-m-d'),
        "notes" => "Newly Deployed"
    ]);

	$database->update("assets", ["clientid" => $cid, "statusid" => "7", "status" => "In Service"], ["id" => $assetid]);

	 $database->update("contract", ["statusid" => "7",  "assetid"=>$assetid,"is_end" => "0"], ["id" => $coid]);
	 $database->update("contract_usages", ["description" =>"Asset Replaced","statusid" =>"Replaced"], ["id" => $contrugg['id']]);
	 
	 $new = $database->insert("contract_usages", [
        "clientid" => $cid,
        "contractid" => $coid,
        "assetid" => $assetid,
        "startdate" => date('Y-m-d'),
		"scolora3" => $_POST['A3clrr'],
        "scolora4" => $_POST['A4clrr'],
        "sblacka3" => $_POST['A3blkk'],
        "sblacka4" => $_POST['A4blkk'],
        "description" => "New Asset"
    ]);
	
	
    header("Location: ?route=contract/manage&id=".$coid."&reroute=clients/manage&routeid=".$cid."&contractid=".$coid."&section=contract");

	
}

// ASSET MODELS

if (isset($_POST['updateonlydepart'])) {
	
    $status = updatedeparton($_POST);
    header("Location:?route=clients/manage&id=" . $_POST['reffer'] . "&tab=department");
}

if (isset($_POST['updateonlycasesrl'])) {
	
    $status = updateonlycasesrl($_POST);
    header("Location:?route=clients/manage&id=" . $_POST['reffer'] . "&tab=department&status=" . $status);
}

if (isset($_POST['addModel'])) {
    $status = addModel($_POST,$_FILES);
    header("Location:?route=" . $_POST['route'] . "&id=" . $_POST['routeid'] . "&status=" . $status);
}
if (isset($_POST['editModel'])) {
	if($_FILES['image']['name']!=''){


    $status = editModel($_POST,$_FILES);
	}else{

		$status = editModel($_POST);
	}
    header("Location:?route=" . $_POST['route'] . "&id=" . $_POST['routeid'] . "&status=" . $status);
}
if (isset($_POST['deleteModel'])) {
    $status = deleteModel($_POST['id']);
    header("Location:?route=" . $_POST['route'] . "&id=" . $_POST['routeid'] . "&status=" . $status);
}

// SUPPLIERS
if (isset($_POST['addSupplier'])) {
    $status = addSupplier($_POST);
    header("Location:?route=" . $_POST['route'] . "&id=" . $_POST['routeid'] . "&status=" . $status);
}
if (isset($_POST['editSupplier'])) {
    $status = editSupplier($_POST);
    header("Location:?route=" . $_POST['route'] . "&id=" . $_POST['routeid'] . "&status=" . $status);
}
if (isset($_POST['deleteSupplier'])) {
    $status = deleteSupplier($_POST['id']);
    header("Location:?route=" . $_POST['route'] . "&id=" . $_POST['routeid'] . "&status=" . $status);
}

// ISSUE INVOICE
if (isset($_POST['issueInvoice'])) {
    $status = issueInvoice($_POST);
    header("Location:?route=" . $_POST['route'] . "&id=" . $_POST['routeid'] . "&status=" . $status . "&section=" . $_POST['section']);
}

if (isset($_POST['saveMonth'])) {
    $status = saveMonth($_POST);
    header("Location:?route=" . $_POST['route'] . "&id=" . $_POST['routeid'] . "&status=" . $status . "&section=" . $_POST['section']);
}

// SETTINGS
if (isset($_POST['generalSettings'])) {
    updateSetting("app_name", $_POST['app_name']);
    updateSetting("company_name", $_POST['company_name']);
    updateSetting("company_details", $_POST['company_details']);
    updateSetting("log_retention", $_POST['log_retention']);
    updateSetting("week_start", $_POST['week_start']);
    updateSetting("table_records", $_POST['table_records']);
    updateSetting("license_tag_prefix", $_POST['license_tag_prefix']);
    updateSetting("asset_tag_prefix", $_POST['asset_tag_prefix']);
    header("Location:?route=system/settings&status=40");
}
if (isset($_POST['ticketpages'])) {
	
	
    updateSetting("client_handle_mistake", $_POST['client_handle_mistake']);
    updateSetting("technical_improvement", $_POST['technical_improvement']);
    updateSetting("refill", $_POST['refill']);
    updateSetting("parsts_replacments", $_POST['parsts_replacments']);
    
    header("Location:?route=system/tickettype&status=40");
}
if (isset($_POST['logoSettings'])) {
    $status = updateLogoSetting($_FILES);
    header("Location:?route=system/settings&section=logo&status=$status");
}

if (isset($_POST['emailSettings'])) {
    updateSetting("email_from_address", $_POST['email_from_address']);
    updateSetting("email_from_name", $_POST['email_from_name']);
    //updateSetting("email_smtp_host", $_POST['email_smtp_host']);
    //updateSetting("email_smtp_port", $_POST['email_smtp_port']);
    //updateSetting("email_smtp_username", $_POST['email_smtp_username']);
    //updateSetting("email_smtp_password", $_POST['email_smtp_password']);
    //updateSetting("email_smtp_security", $_POST['email_smtp_security']);
    updateSetting("notification_recipient", $_POST['notification_recipient']);
    if (isset($_POST['email_smtp_auth']))
        $email_smtp_auth = "true";
    else
        $email_smtp_auth = "false";
    updateSetting("email_smtp_auth", $email_smtp_auth);
    if (isset($_POST['email_smtp_enable']))
        $email_smtp_enable = "true";
    else
        $email_smtp_enable = "false";
    updateSetting("email_smtp_enable", $email_smtp_enable);
    header("Location:?route=system/settings&section=email&status=40");
}
if (isset($_POST['smsSettings'])) {
    updateSetting("sms_provider", $_POST['sms_provider']);
    updateSetting("sms_user", $_POST['sms_user']);
    updateSetting("sms_password", $_POST['sms_password']);
    updateSetting("sms_api_id", $_POST['sms_api_id']);
    updateSetting("sms_from", $_POST['sms_from']);

    header("Location:?route=system/settings&section=sms&status=40");
}
if (isset($_POST['ticketsSettings'])) {
    updateSetting("tickets_server", $_POST['tickets_server']);
    updateSetting("tickets_username", $_POST['tickets_username']);
    updateSetting("tickets_password", $_POST['tickets_password']);
    updateSetting("tickets_encrypton", $_POST['tickets_encrypton']);
    if (isset($_POST['tickets_notification']))
        $tickets_notification = "true";
    else
        $tickets_notification = "false";
    updateSetting("tickets_notification", $tickets_notification);

    header("Location:?route=system/settings&section=tickets&status=40");
}

if (isset($_POST['editNotificationTemplate'])) {
    $status = editNotificationTemplate($_POST);
    header("Location:?route=" . $_POST['route'] . "&id=" . $_POST['routeid'] . "&section=" . $_POST['section'] . "&status=" . $status);
}

if (isset($_POST['uploadexl'])) {
	$ext = pathinfo($_FILES['file']['name'], PATHINFO_EXTENSION);
	if($ext == "csv"){
	$file = $_FILES['file']['tmp_name'];
    $handle = fopen($file, "r");
	while(($filesop = fgetcsv($handle, 1000, ",")) !== false)
	{
		
		if(is_numeric ($filesop[0])){
		global $database; 	
		$database->update("assets", ["remark" => $filesop[3]], ["sku" => $filesop[0]]);
		
		}
	}
		header("Location:?route=assets/allaset&status=20");
	}else{
		header("Location:?route=assets/allaset&status=55");
	}
}

if (isset($_POST['sendmail'])) {
	$status = sendmail($_POST, $_FILES);
    header("Location:?route=" . $_POST['route'] . "&status=" . $status);
}

if (isset($_POST['addslide'])) {
	$status = addslide($_POST, $_FILES);
    header("Location:?route=" . $_POST['route'] . "&status=" . $status);
}

if (isset($_POST['editslide'])) {
	$status = editslide($_POST, $_FILES);
    header("Location:?route=" . $_POST['route'] . "&status=" . $status);
}
if (isset($_POST['deleteslide'])) {
    $status = deleteslide($_POST['id']);
    header("Location:?route=" . $_POST['route'] . "&status=" . $status);
}
if (isset($_POST['deleteslidegroup'])) {
    $status = deleteslidegroup($_POST['id']);
    header("Location:?route=" . $_POST['route'] . "&status=" . $status);
}
if (isset($_POST['addslidegroup'])) {
	$status = addslidegroup($_POST);
    header("Location:?route=" . $_POST['route'] . "&status=" . $status);
}
if (isset($_POST['editslidegroup'])) {
	$status = editslidegroup($_POST);
    header("Location:?route=" . $_POST['route'] . "&status=" . $status);
}

##### GET DATA FOR MODALS #####
if (isset($_GET['modal'])) {
    switch ($_GET['modal']) {
        case "assetCategoryEdit":
            $category = getRowById("assetcategories", $_GET['id']);
            break;
        case "contractTypeEdit":
            $contracttype = getRowById("contracttype", $_GET['id']);
            break;
        case "licenseCategoryEdit":
            $category = getRowById("licensecategories", $_GET['id']);
            break;
        case "licenseCategoryDelete":
            $category = getRowById("licensecategories", $_GET['id']);
            break;
        case "labelEdit":
            $label = getRowById("labels", $_GET['id']);
            break;
        case "labelDelete":
            $label = getRowById("labels", $_GET['id']);
            break;
        case "manufacturerEdit":
            $manufacturer = getRowById("manufacturers", $_GET['id']);
            break;
        case "manufacturerDelete":
            $manufacturer = getRowById("manufacturers", $_GET['id']);
            break;
		case "warehouseEdit":
            $warehouse = getRowById("warehouse", $_GET['id']);
			break;
		case "consumableEdit":
            $consumable = getRowById("consumable_list", $_GET['id']);
			break;
		case "ticketsubjectEdit":
            $subject = getRowById("ticketsubject", $_GET['id']);
            break;
        case "warehouseDelete":
            $warehouse = getRowById("warehouse", $_GET['id']);
            break;
		case "consumableDelete":
            $consumable = getRowById("consumable_list", $_GET['id']);
            break;
        case "modelAdd":
            $manufacturers = getTable("manufacturers");
            break;
        case "modelEdit":
            $manufacturers = getTable("manufacturers");
            $model = getRowById("models", $_GET['id']);
            break;
        case "modelDelete":
            $manufacturers = getTable("manufacturers");
            $model = getRowById("models", $_GET['id']);
            break;
        case "supplierEdit":
            $supplier = getRowById("suppliers", $_GET['id']);
            break;
        case "supplierDelete":
            $supplier = getRowById("suppliers", $_GET['id']);
            break;
        case "userAdd":
            $clients = getTable("clients");
            break;
        case "userDelete":
            $user = getRowById("people", $_GET['id']);
            break;
        case "adminDelete":
            $admin = getRowById("people", $_GET['id']);
            break;
        case "hostAdd":
            $clients = getTable("clients");
            break;
        case "hostEdit":
            $clients = getTable("clients");
            $host = getRowById("hosts", $_GET['id']);
            break;
        case "hostDelete":
            $host = getRowById("hosts", $_GET['id']);
            break;
        case "checkEdit":
            $check = getRowById("hosts_checks", $_GET['id']);
            break;
        case "checkDelete":
            $check = getRowById("hosts_checks", $_GET['id']);
            break;
        case "hostAssignPeople":
            $people = getTable("people");
            break;
        case "clientEdit":
            $client = getRowById("clients", $_GET['id']);
            break;
        case "clientDelete":
            $client = getRowById("clients", $_GET['id']);
            break;
        case "credentialAdd":
            $assets = getTable("assets");
            $clients = getTable("clients");
            break;
        case "credentialEdit":
            $credential = getRowById("credentials", $_GET['id']);
            $assets = getTable("assets");
            $clients = getTable("clients");
            break;
        case "credentialDelete":
            $credential = getRowById("credentials", $_GET['id']);
            break;
        case "issueAdd":
            $assets = getTable("assets");
            $clients = getTable("clients");
            $projects = getTable("projects");
            $admins = getTableFiltered("people", "type", "admin");
            break;
		case "addKBCategory":
			isAuthorized("addKB");
			$status = Kb::addCategory($_POST);
			break;
		case "kb":
            $assets = getTable("kb_categories");
            $clients = getTable("clients");
            $projects = getTable("projects");
            $admins = getTableFiltered("people", "type", "admin");
            break;
        case "issueEdit":
            $issue = getRowById("issues", $_GET['id']);
            $assets = getTable("assets");
            $clients = getTable("clients");
            $projects = getTable("projects");
            $admins = getTableFiltered("people", "type", "admin");
            break;
        case "issueDelete":
            $issue = getRowById("issues", $_GET['id']);
            break;
        case "usageAdd":
            $cliendid = $_GET['clientid'];
            $assetid = $_GET['assetid'];
            $assets = getTable("assets");
            $clients = getTable("clients");
            $projects = getTable("projects");
            $admins = getTableFiltered("people", "type", "admin");
            break;
        case "replaceasset":

            $assets = getTableFiltered("assets", "clientid", "0");
			$assettotalCount = $database->count("assets","clientid", "0");
            break;
		case "assetstatuschange":

       $lables = getTable("labels");
			
        break;	
	case "assetlocationchange":

       $warehouses = getTable("warehouse");
			
       break;	
			
		case "pullout";
			$labels = getTableasc("labels");
			$warehouses = getTable("warehouse");
			$warehousetotalCount = $database->count("warehouse");
            break;
			
			
		case "usageEdit":
            $usage = getRowById("asset_usages", $_GET['id']);
            $assets = getTable("assets");
            $clients = getTable("clients");
            $projects = getTable("projects");
            $admins = getTableFiltered("people", "type", "admin");
            break;
			
        case "usageDelete":
            $issue = getRowById("issues", $_GET['id']);
            break;
        case "contractUsageAdd":
		    $usages = getTableFiltereddc("contract_usages", "contractid", $_GET['contractid']);
			$usage = getRowById("contract_usages", $_GET['contractid']);
            $contractid = $_GET['contractid'];
            $contractno = getSingleValue('contract', 'contractno', $contractid);
            $clientid = getSingleValue('contract', 'clientid', $contractid);
            $clients = getTable("clients");
            break;
        case "contractUsageEdit":
            $usage = getRowById("contract_usages", $_GET['id']);
            $clients = getTable("clients");
//            $projects = getTable("projects");
//            $admins = getTableFiltered("people", "type", "admin");
            break;
        case "contractUsageDelete":
            $issue = getRowById("contract_usages", $_GET['id']);
            break;
        case "ticketAdd":
			
            $assets = getTable("assets");
            $clients = getTable("clients");
            $admins = getTableFiltered("people", "type", "admin");
            $users = getTableFiltered("people", "type", "user");
			$contracts = getTableFiltered("contract", "clientid", $_GET['routeid']);
			$subject = getTable("ticketsubject");
            break;
        case "ticketEdit":
            $ticket = getRowById("tickets", $_GET['id']);
            $assets = getTable("assets");
            $clients = getTable("clients");
            $admins = getTableFiltered("people", "type", "admin");
            $users = getTableFiltered("people", "type", "user");
			$subject = getTable("ticketsubject");
            break;
        case "ticketReport":
            $ticket = getRowById("tickets", $_GET['id']);
            $assets = getTable("assets");
            $clients = getTable("clients");
            $admins = getTableFiltered("people", "type", "admin");
            $users = getTableFiltered("people", "type", "user");
            break;
        case "ticketDelete":
            $ticket = getRowById("tickets", $_GET['id']);
            break;
        case "contractTicketAdd":
            //$contracts = getTableFiltered("contract", 'clientid', $_GET['clientid']);
            $query = $database->query("SELECT contract.id,contract.contractno,contract.department, assets.tag as asset_tag, assets.serial, models.name as asset_model "
                    . "FROM contract "
                    . "LEFT JOIN assets ON assets.id = contract.assetid "
                    . "LEFT JOIN models ON assets.modelid = models.id "
                    . "WHERE contract.clientid=" . $_GET["clientid"] . " AND contract.is_end=0"
                    . " ORDER BY contract.id DESC"
            );
			$subject = getTable("ticketsubject");


            //$query = $database->query("SELECT id , contractno FROM contract WHERE clientid=" . $_GET["clientid"]);
            $contracts = $query->fetchAll();
            $clients = getTable("clients");
            $admins = getTableFiltered("people", "type", "admin");
            $users = getTableFiltered("people", "type", "user");
            break;
		case "contractconsumableAdd":
           
            $query = $database->query("SELECT contract.id,contract.contractno,contract.department, assets.tag as asset_tag, assets.serial, models.name as asset_model "
                    . "FROM contract "
                    . "LEFT JOIN assets ON assets.id = contract.assetid "
                    . "LEFT JOIN models ON assets.modelid = models.id "
                    . "WHERE contract.clientid=" . $_GET["clientid"] . " AND contract.is_end=0"
                    . " ORDER BY contract.id DESC"
            );
			$consumable = getTable("consumable_list");
            $contracts = $query->fetchAll();
            $admins = getTableFiltered("people", "type", "admin");
            break;
		case "contractconsumabletEdit":
			$consumabledata = getRowById("consumable", $_GET['id']);
			$consumable = getTable("consumable_list");
             $contracts = getTableFiltered("contract", 'clientid', $consumabledata['client_id']);
            $admins = getTableFiltered("people", "type", "admin");
            break;
        case "contractTicketEdit":
            $ticket = getRowById("tickets", $_GET['id']);
            //$contractid = $ticket['contractid'];
            $contracts = getTableFiltered("contract", 'clientid', $ticket['clientid']);
            $clients = getTable("clients");
            $admins = getTableFiltered("people", "type", "admin");
            $users = getTableFiltered("people", "type", "user");
			$subject = getTable("ticketsubject");
            break;
        case "contractTicketDelete":
            $ticket = getRowById("tickets", $_GET['id']);
            break;
        case "clientAssignAdmin":
            $admins = getTableFiltered("people", "type", "admin");
            break;
        case "clientUnassignAdmin":
            $clientsadmins = getRowById("clients_admins", $_GET['id']);
            break;
		case "slidegroupedit":
            $category = getRowById("slider_group", $_GET['id']);
            break;
        case "assetAssignLicense":
            $licenses = getTable("licenses");
            break;
        case "assetUnassignLicense":
            $licensesassets = getRowById("licenses_assets", $_GET['id']);
            break;
        case "licenseAssignAsset":
            $assets = getTable("assets");
            break;
        case "licenseUnassignAsset":
            $licensesassets = getRowById("licenses_assets", $_GET['id']);
            break;
        case "assetDelete":
            $asset = getRowById("assets", $_GET['id']);
            break;
		case "warantyDelete":
            $asset = getRowById("warranty", $_GET['id']);
            break;
        case "contractDelete":
            $contract = getRowById("contract", $_GET['contractid']);
            break;
        case "licenseDelete":
            $license = getRowById("licenses", $_GET['id']);
            break;
        case "notificationTemplate":
            $template = getRowById("notificationtemplates", $_GET['id']);
            break;
        case "projectAdd":
            $clients = getTable("clients");
            break;
        case "projectEdit":
            $project = getRowById("projects", $_GET['id']);
            $clients = getTable("clients");
            break;
        case "projectDelete":
            $project = getRowById("projects", $_GET['id']);
            break;
        case "projectAssignAdmin":
            $admins = getTableFiltered("people", "type", "admin");
            break;
        case "projectUnassignAdmin":
            $projectadmins = getRowById("projects_admins", $_GET['id']);
            break;
        case "contractHistoryEdit":
            $assets = getTable('assets');
            $history = getRowById("contract_history", $_GET['historyid']);
            break;
        case "contractHistoryDelete":
            $history = getRowById("contract_history", $_GET['historyid']);
            break;
		case "assetUsageEdit":
            $assets = getRowById("assets", $_GET['id']);
			break;
		case "slidenotice":
            $contracttype = getTable("slider_notice");
            break;
		case "kb/editCategory":
			$kbcategory = getRowById("kb_categories",$_GET['id']);
			//print_r($kbcategory);
			$selectedClients = array(); if($kbcategory['clients'] != "") $selectedClients = unserialize($kbcategory['clients']);
			$clients = getTable("clients");
			break;
		case "kb/addCategory":
			$kbcategory = getRowById("clients",$_GET['id']);
			$selectedClients = array(); if($kbcategory['clients'] != "") $selectedClients = unserialize($kbcategory['clients']);
			$clients = getTable("clients");
			break;	
		case "kb/addArticle":
			$kbcategories = getTable("kb_categories");
			$clients = getTable("clients");
			break;
		case "kb/viewArticle":
			$kbarticle = getRowById("kb_articles",$_GET['id']);
			break;
		case "kb/editArticle":
			$kbarticle = getRowById("kb_articles",$_GET['id']);
			$selectedClients = array(); if($kbarticle['clients'] != "") $selectedClients = unserialize($kbarticle['clients']);
			$kbcategories = getTable("kb_categories");
			$clients = getTable("clients");
			break;
    }
}

##### GET THE DATA #####
// SEARCH
if ($route == "search") {
    $assets = $database->select("assets", "*", [ "OR" => [
            "purchase_date[~]" => $_GET['q'],
            "tag[~]" => $_GET['q'],
            "name[~]" => $_GET['q'],
            "serial[~]" => $_GET['q'],
            "notes[~]" => $_GET['q']
    ]]);
    $licenses = $database->select("licenses", "*", [ "OR" => [
            "tag[~]" => $_GET['q'],
            "name[~]" => $_GET['q'],
            "serial[~]" => $_GET['q'],
            "notes[~]" => $_GET['q']
    ]]);
    $clients = $database->select("clients", "*", [ "OR" => [
            "name[~]" => $_GET['q']
    ]]);
    $tickets = $database->select("tickets", "*", [ "OR" => [
            "ticket[~]" => $_GET['q'],
            "subject[~]" => $_GET['q']
    ]]);
    $issues = $database->select("issues", "*", [ "OR" => [
            "name[~]" => $_GET['q'],
            "description[~]" => $_GET['q']
    ]]);
    $projects = $database->select("projects", "*", [ "OR" => [
            "tag[~]" => $_GET['q'],
            "name[~]" => $_GET['q'],
            "notes[~]" => $_GET['q'],
            "description[~]" => $_GET['q']
    ]]);
}


// GENERAL
$openTicketsCount = $database->count("tickets", ["status" => ["Open", "Reopened"]]);
$overdueIssues = $database->count("issues", [ "AND" => ["status[!]" => "Done", "duedate[<]" => date("Y-m-d"), "duedate[!]" => ""]]);

// DASHBOARD
if ($route == "dashboard") {
    global $database;
	$uid=  $lia['id'];
	 $select1 = "SELECT role "
            . "FROM people "
            
            . "WHERE id =".$uid;
	$query1 = $database->query($select1);
    $userrole = $query1->fetchAll();
	if($userrole[0]['role']=='technician')
	{
		$sumAssets = countTable("assets");
    $sumLicenses = countTable("licenses");
    $sumProjects = countTable("projects");
    $sumClients = countTable("clients");
    $sumUsers = countTableFiltered("people", "type", "user");
    $sumContract = countTable("contract");
    $categories = getTable("assetcategories");
    $myIssues = $database->select("issues", "*", [ "AND" => ["status[!]" => "Done", "adminid" => $lia['id']]]);
//    $openTickets = $database->select("tickets", "*", ["status" => ["Open", "Reopened"]]);
    $recentAssets = $database->select("assets", "*", ["ORDER" => "id DESC", "LIMIT" => 5]);
    //$recentContracts = $database->select("contract", "*", ["ORDER" => "id DESC", "LIMIT" => 5]);
    $recentLicenses = $database->select("licenses", "*", ["ORDER" => "id DESC", "LIMIT" => 5]);
    $select = "SELECT contract.id contractid,contract.contractno,assetcategories.name as servicetype,assetcategories.color as servicecolor, clients.name clientname, assets.tag,assets.serial, models.name as modelname "
            . "FROM contract "
            . "JOIN assets ON assets.id = contract.assetid "
            . "JOIN models ON assets.modelid = models.id "
            . "JOIN assetcategories ON assetcategories.id = contract.categoryid "
            . "JOIN clients ON clients.id = contract.clientid "
            . "WHERE contract.id is not null ORDER BY contract.id DESC ";
//    die($select);
    $query = $database->query($select);
    $recentContracts = $query->fetchAll();

    $select = "SELECT tickets.* "
            . "FROM tickets "
           // . "JOIN contract ON contract.id = tickets.contractid "
           // . "JOIN assets ON assets.id = contract.assetid "
           // . "JOIN models ON assets.modelid = models.id "
           // . "JOIN clients ON clients.id = tickets.clientid "
			
            . "WHERE (tickets.adminid= ".$uid." AND (tickets.status='Open' OR tickets.status='Reopened') )ORDER BY tickets.id DESC ";
  //  die($select);
    $query = $database->query($select);
    $openTickets = $query->fetchAll();
	$role=$userrole[0]['role'];
	}
	else
	{
		
			
    $sumAssets = countTable("assets");
    $sumLicenses = countTable("licenses");
    $sumProjects = countTable("projects");
    $sumClients = countTable("clients");
    $sumUsers = countTableFiltered("people", "type", "user");
    $sumContract = countTable("contract");
    $categories = getTable("assetcategories");
    $myIssues = $database->select("issues", "*", [ "AND" => ["status[!]" => "Done", "adminid" => $lia['id']]]);
//    $openTickets = $database->select("tickets", "*", ["status" => ["Open", "Reopened"]]);
    $recentAssets = $database->select("assets", "*", ["ORDER" => "id DESC", "LIMIT" => 5]);
    //$recentContracts = $database->select("contract", "*", ["ORDER" => "id DESC", "LIMIT" => 5]);
    $recentLicenses = $database->select("licenses", "*", ["ORDER" => "id DESC", "LIMIT" => 5]);
    $select = "SELECT contract.id contractid,contract.contractno,assetcategories.name as servicetype,assetcategories.color as servicecolor, clients.name clientname, assets.tag,assets.serial, models.name as modelname "
            . "FROM contract "
            . "JOIN assets ON assets.id = contract.assetid "
            . "JOIN models ON assets.modelid = models.id "
            . "JOIN assetcategories ON assetcategories.id = contract.categoryid "
            . "JOIN clients ON clients.id = contract.clientid "
            . "WHERE contract.id is not null ORDER BY contract.id DESC ";
//    die($select);
    $query = $database->query($select);
    $recentContracts = $query->fetchAll();

    $select = "SELECT tickets.*, clients.name clientname, assets.tag,assets.serial, models.name as modelname "
            . "FROM tickets "
            . "JOIN contract ON contract.id = tickets.contractid "
            . "JOIN assets ON assets.id = contract.assetid "
            . "JOIN models ON assets.modelid = models.id "
            . "JOIN clients ON clients.id = tickets.clientid "
            . "WHERE (tickets.status='Open' OR tickets.status='Reopened') ORDER BY tickets.id DESC ";
    //die($select);
    $query = $database->query($select);
    $openTickets = $query->fetchAll();
	
	}
    //cs_debug($openTickets);
}

// ASSETS

if ($route == "assets" && $_GET['cli']) {
    //$assets = getTableFiltered("assets", "clientid[<>]", [1,999998]);//getTable("assets");
    $assets = getTableFiltered2("assets", ["clientid" => [$_GET['cli']]], "*");
$assettotalCount = $database->count("assets", ["clientid" => [$_GET['cli']]]);
}elseif ($route == "assets") {
    
    $assets = getTableFiltered2("assets", ["status" => ["In Service"]], "*");
	$assettotalCount = $database->count("assets", ["status" => ["In Service"]]);
}


if ($route == "assets/warehouse" && $_GET['wh']) {
	
    $assets = getTableFiltered("assets", "status", "Available","warehouseid",$_GET['wh']); //getTable("assets");
   // $assets_count = countTable("assets", "clientid", "0"); //getTable("assets");
   $assetstockwarehouseCount = $database->count("assets", ["status" => ["Available"]]);
}elseif ($route == "assets/warehouse") {

    $assets = getTableFiltered("assets", "status", "Available"); //getTable("assets");
   // $assets_count = countTable("assets", "clientid", "0"); //getTable("assets");
   $assetstockwarehouseCount = $database->count("assets", ["status" => ["Available"]]);
}



if ($route == "assets/repair") {
    $assets = getTableFiltered("assets", "status", "Under Repair"); //
	$assetsdisposeCount = $database->count("assets", ["status" => ["Under Repair"]]);
}
if ($route == "assets/disposal") {
    $assets = getTableFiltered("assets", "status", "For Disposal"); //
	$assetsdisposeCount = $database->count("assets", ["status" => ["For Disposal"]]);
}
if ($route == "assets/pullout") {
    $assets = getTableFiltered("assets", "status", "For Pullout"); //
	$assetsdisposeCount = $database->count("assets", ["status" => ["For Pullout"]]);
}
if ($route == "assets/allaset") {
    $assets = getTable("assets");
	$assetCount = $database->count("assets");
}
if($route == "assets/create" && $_GET['assettyp']){
	
	$clients = getTable("clients");
	$warehouse = getTable("warehouse");
    $admins = getTableFiltered("people", "type", "admin");
    $users = getTableFiltered("people", "type", "user");
    $models = getTableFiltered("models", "manufacturerid", $_GET['assettyp']);
    $manufacturers = getTableasc("manufacturers");
    $categories = getTableasc("assetcategories");
    $labels = getTable("labels");
    $suppliers = getTable("suppliers");
	
	
}elseif ($route == "assets/create") {
    $clients = getTable("clients");
	$warehouse = getTable("warehouse");
    $admins = getTableFiltered("people", "type", "admin");
    $users = getTableFiltered("people", "type", "user");
    $models = '';
    $manufacturers = getTableasc("manufacturers");
    $categories = getTableasc("assetcategories");
    $labels = getTable("labels");
    $suppliers = getTable("suppliers");
}
if ($route == "assets/manage") {
    $asset = getRowById("assets", $_GET['id']);
	$warehouse = getTable("warehouse");
    $issues = getTableFiltered("issues", "assetid", $_GET['id']);
    $kb = getTableFiltered("kb", "assetid", $_GET['id']);
    $tickets = getTableFiltered("tickets", "assetid", $_GET['id']);
    $credentials = getTableFiltered("credentials", "assetid", $_GET['id']);
    $assignedlicenses = getTableFiltered("licenses_assets", "assetid", $_GET['id']);
    $clients = getTable("clients");
    $admins = getTableFiltered("people", "type", "admin");
    $users = getTableFiltered("people", "type", "user");
    $models = getTable("models");
    $manufacturers = getTable("manufacturers");
    $categories = getTable("assetcategories");
    $labels = getTable("labels");
    $licenses = getTable("licenses");
    $suppliers = getTable("suppliers");
    $files = getTableFiltered("files", "assetid", $_GET['id'], "file[!]", NULL);
    $asset_usages = getTableFiltered("asset_usages", "assetid", $_GET['id']);
}

if ($route == "allassetexport") {
	$asset = getTable("assets");
	$i =0;
	$records = array();
	foreach($asset as $assett){
		if($assett['clientid'] != 0){
			$client = getSingleValue("clients","name",$assett['clientid']);
		}else{
			$client = 'NONE';
		}
		$manufacturerid = getSingleValue("models","manufacturerid",$assett['modelid']);
		
		$records[] = array("category"=>getSingleValue("assetcategories","name",$assett['categoryid']),"sku"=>$assett['sku'],"client"=>$client,"warehouse"=>getSingleValue("warehouse","name",$assett['warehouseid']),"manufacturer"=>getSingleValue("manufacturers","name",$manufacturerid),"model"=>getSingleValue("models","name",$assett['modelid']),"supplier"=>getSingleValue("suppliers","name",$assett['supplierid']),"service_status"=>getSingleValue("labels","name",$assett['statusid']),"purchase_date"=>$assett['purchase_date'],"warranty_months"=>$assett['warranty_months'],"warranty_expiry"=>$assett['warranty_expiry'],"tag"=>$assett['tag'],"name"=>$assett['name'],"serial"=>$assett['serial'],"caseserial"=>$assett['caseserial'],"notes"=>$assett['notes'],"invoice"=>$assett['invoice'],"warranty_card"=>$assett['warranty_card'],"asset_status"=>$assett['status'],"remark"=>$assett['remark']);
	}
	// echo'<pre>';
	// print_r($records);
	// echo'<pre>';
	// die('newwww');
		$filename = "Allasset.xls";		 
		header("Content-Type: application/vnd.ms-excel");
		header("Content-Disposition: attachment; filename=\"$filename\"");
		$heading = false;
		if(!empty($records))
		  foreach($records as $row) {
			if(!$heading) {
			  echo implode("\t", array_keys($row)) . "\n";
			  $heading = true;
			}
			echo implode("\t", array_values($row)) . "\n";
		  }
		  
		exit;
}

if ($route == "allremarkexport") {
	$asset = getTable("assets");
	$i =0;
	$records = array();
	foreach($asset as $assett){
	
		$records[] = array("sku"=>$assett['sku'],"warehouse"=>getSingleValue("warehouse","name",$assett['warehouseid']),"model"=>getSingleValue("models","name",$assett['modelid']),"remark"=>$assett['remark']);
	}
	$header[] = array("sku"=>"Sku","warehouse"=>"Warehouse","model"=>"Model","remark"=>"Remark");
	$filename = "Remark.csv";
	$fp = fopen('php://output', 'w');
	header('Content-type: application/csv');
	header('Content-Disposition: attachment; filename='.$filename);
	foreach($header as $header) {
	fputcsv($fp, $header);
	}
	foreach($records as $row) {
		fputcsv($fp, $row);
	}
	exit;
}

if ($route == "resetremark") {
	$empty = "";
$database->update("assets", ["remark" => $empty]);
	header("Location:?route=assets/allaset&status=20");
}

// warranty
	if ($route == "warranty"  && $_GET['stts']){
	if ($_GET['stts']!=0){
		$assets = getTableFiltered("warranty", "status", $_GET['stts']);
	}else{
		$assets = getTableFiltered3("warranty", "*");
	}
	$wrtytotalCount = $database->count("warranty");
	
	
}elseif ($route == "warranty") {
    $assets = getTableFiltered3("warranty", "*");
	$wrtytotalCount = $database->count("warranty");
}



	if($route == "warranty/create" && $_GET['assettyp']){
	
	$clients = getTable("clients");
	$warehouse = getTable("warehouse");
    $admins = getTableFiltered("people", "type", "admin");
    $users = getTableFiltered("people", "type", "user");
    $models = getTableFiltered("models", "manufacturerid", $_GET['assettyp']);
    $manufacturers = getTable("manufacturers");
    $categories = getTable("assetcategories");
    $labels = getTable("labels");
    $suppliers = getTable("suppliers");
	
	
}elseif ($route == "warranty/create") {
	$warehouse = getTable("warehouse");
    $admins = getTableFiltered("people", "type", "admin");
    $users = getTableFiltered("people", "type", "user");
    $models = '';
    $manufacturers = getTable("manufacturers");
    $categories = getTable("assetcategories");
    $labels = getTable("labels");
    $suppliers = getTable("suppliers");
}

if ($route == "warranty/manage") {
    $asset = getRowById("warranty", $_GET['id']);
    $assettts = getTableFiltered("warrantyhistory", "warrantyid", $_GET['id']);
    $models = getTable("models");
    $manufacturers = getTable("manufacturers");
    $suppliers = getTable("suppliers");
    $files = getTableFiltered("files", "assetid", $_GET['id'], "file[!]", NULL);
}

if ($route == "warranty/hiscreate" && $_GET['id']) {
    $asset = getRowById("warranty", $_GET['id']);
    $models = getTable("models");
    $manufacturers = getTable("manufacturers");
    $suppliers = getTable("suppliers");
}

if ($route == "warranty/hisedit" && $_GET['id']) {
    $usage = getRowById("warrantyhistory", $_GET['id']);
    $asset = getRowById("warranty", $usage['warrantyid']);
	$models = getTable("models");
    $manufacturers = getTable("manufacturers");
}            
if ($route == "warrantyupdate") {
	$wrnty = getTableFiltered3("warranty", "serial");
	foreach($wrnty as $wrnt){
		$assi = getSingleValue2("assets", "clientid", "caseserial", $wrnt);
		if($assi != "" && $assi !=0){
			$astid = getSingleValue2("assets", "id", "caseserial", $wrnt);
			$deprt = getSingleValue2("contract", "department", "assetid", $astid);
			$database->update("warranty", ["location" => $assi, "department" => $deprt], ["serial" => $wrnt]);
		}else{
			$database->update("warranty", ["location" => "None","department" => ""], ["serial" => $wrnt]);
		}
	// echo'<pre>';
	// print_r($wrnt);
	// print_r("-----".$assi);
	// echo'</pre>';
	// die('fejifv');
	}
	
	header("Location:?route=warranty");

}

// LICENSES
if ($route == "licenses") {
    $licenses = getTable("licenses");
}
if ($route == "licenses/manage") {
    $license = getRowById("licenses", $_GET['id']);
    $categories = getTable("licensecategories");
    $labels = getTable("labels");
    $clients = getTable("clients");
    $assignedassets = getTableFiltered("licenses_assets", "licenseid", $_GET['id']);
    $assets = getTable("assets");
    $suppliers = getTable("suppliers");
}
if ($route == "licenses/create") {
    $suppliers = getTable("suppliers");
    $categories = getTable("licensecategories");
    $labels = getTable("labels");
    $clients = getTable("clients");
}

// PROJECTS
if ($route == "projects")
    $projects = getTable("projects");
if ($route == "projects/manage") {
    $project = getRowById("projects", $_GET['id']);
    $assignedadmins = getTableFiltered("projects_admins", "projectid", $_GET['id']);
    $files = getTableFiltered("files", "projectid", $_GET['id']);

    $todo = $database->select("issues", "*", [ "AND" => ["status" => "To Do", "projectid" => $_GET['id']]]);
    $inprogress = $database->select("issues", "*", [ "AND" => ["status" => "In Progress", "projectid" => $_GET['id']]]);
    $done = $database->select("issues", "*", [ "AND" => ["status" => "Done", "projectid" => $_GET['id']]]);

    $countTodo = count($todo);
    $countInprogress = count($inprogress);
    $countDone = count($done);
    $countAll = $countTodo + $countInprogress + $countDone;
}




if ($route == "tickets" && $_GET['tickettype']) {
	$colmnh = $_GET['tickettype'];
	global $database;
  //  $tickets = getticketTable("tickets");
$query = $database->query("SELECT *
  FROM tickets
   WHERE $colmnh = '1'
 ORDER BY  
          CASE 
            WHEN status = 'open' 
              THEN UNIX_TIMESTAMP(timestamp) END,
          CASE 
            WHEN status <> 'open' 
              THEN UNIX_TIMESTAMP(timestamp) END DESC
			  "   
			  );
$tickets = $query->fetchAll();
$clients = getTableasc('clients'); 
	
	
	
}elseif($route == "tickets" && $_GET['sfdate'] && $_GET['efdate'] && $_GET['companyname']){
	
	
	 $startdate = $_GET['sfdate'] . " 00:00:00";
        $enddate = $_GET['efdate'] . " 00:00:00";
       
            $tickets = $database->select("tickets", "*",
			[
			"AND" =>[
				"clientid"=> $_GET['companyname'],
                "timestamp[<>]" => [$startdate, $enddate]
			]	
            ]);
      
   $clients = getTableasc('clients');    
	
	
	
	
}elseif($route == "tickets" && $_GET['sfdate'] && $_GET['efdate']){
	
	
	 $startdate = $_GET['sfdate'] . " 00:00:00";
        $enddate = $_GET['efdate'] . " 00:00:00";
       
            $tickets = $database->select("tickets", "*", [
                "timestamp[<>]" => [$startdate, $enddate]
            ]);
      
   $clients = getTableasc('clients');    
	
	
	
	
}
elseif ($route == "tickets")
	
	{
		if($_GET['companyname']){
		
			
		  global $database;	
		 $query = $database->query("SELECT *
  FROM tickets
   WHERE clientid = ".$_GET['companyname']."
   
 ORDER BY  
          CASE 
            WHEN status = 'open' 
              THEN UNIX_TIMESTAMP(timestamp) END,
          CASE 
            WHEN status <> 'open' 
              THEN UNIX_TIMESTAMP(timestamp) END DESC
			  "   	
			);
			
$tickets = $query->fetchAll();	
$clients = getTableasc('clients'); 		

		}else{

	    global $database;
  //  $tickets = getticketTable("tickets");
$query = $database->query("SELECT *
  FROM tickets
 ORDER BY  
          CASE 
            WHEN status = 'open' 
              THEN UNIX_TIMESTAMP(timestamp) END,
          CASE 
            WHEN status <> 'open' 
              THEN UNIX_TIMESTAMP(timestamp) END DESC" );
$tickets = $query->fetchAll();
$clients = getTableasc('clients'); 
// echo "<pre>";
// print_r($tickets);
		}
}

// TICKETS

	if ($route == "tickets/client_handle_mistake")
	
	{
	    global $database;
  //  $tickets = getticketTable("tickets");
$query = $database->query("SELECT *
  FROM tickets
   WHERE client_handle_mistake = '1'
 ORDER BY  
          CASE 
            WHEN status = 'open' 
              THEN UNIX_TIMESTAMP(timestamp) END,
          CASE 
            WHEN status <> 'open' 
              THEN UNIX_TIMESTAMP(timestamp) END DESC
			  "   
			  );
$tickets = $query->fetchAll();
// echo "<pre>";
// print_r($tickets);
	}
	if ($route == "tickets/technical_improvement")
	
	{
	    global $database;
  //  $tickets = getticketTable("tickets");
$query = $database->query("SELECT *
  FROM tickets
  WHERE technical_improvement = '1'
 ORDER BY  
          CASE 
            WHEN status = 'open' 
              THEN UNIX_TIMESTAMP(timestamp) END,
          CASE 
            WHEN status <> 'open' 
              THEN UNIX_TIMESTAMP(timestamp) END DESC
			  "   
			  );
$tickets = $query->fetchAll();
// echo "<pre>";
// print_r($tickets);
	}
	if ($route == "tickets/refill")
	
	{
	    global $database;
  //  $tickets = getticketTable("tickets");
$query = $database->query("SELECT *
  FROM tickets
  WHERE refill = '1'
 ORDER BY  
          CASE 
            WHEN status = 'open' 
              THEN UNIX_TIMESTAMP(timestamp) END,
          CASE 
            WHEN status <> 'open' 
              THEN UNIX_TIMESTAMP(timestamp) END DESC
			  "   
			  );
$tickets = $query->fetchAll();
// echo "<pre>";
// print_r($tickets);
	}
	if ($route == "tickets/parsts_replacments")
	
	{
	    global $database;
  //  $tickets = getticketTable("tickets");
$query = $database->query("SELECT *
  FROM tickets
  WHERE parsts_replacments = '1'
 ORDER BY  
          CASE 
            WHEN status = 'open' 
              THEN UNIX_TIMESTAMP(timestamp) END,
          CASE 
            WHEN status <> 'open' 
              THEN UNIX_TIMESTAMP(timestamp) END DESC
			  
			  "   
			  );
$tickets = $query->fetchAll();
// echo "<pre>";
// print_r($tickets);
	}
		if ($route == "tickets/ticketsothers")
	
	{
	    global $database;
  //  $tickets = getticketTable("tickets");
$query = $database->query("SELECT *
  FROM tickets
  WHERE ticketothers = '1'
 ORDER BY  
          CASE 
            WHEN status = 'open' 
              THEN UNIX_TIMESTAMP(timestamp) END,
          CASE 
            WHEN status <> 'open' 
              THEN UNIX_TIMESTAMP(timestamp) END DESC
			  
			  "   
			  );
$tickets = $query->fetchAll();
// echo "<pre>";
// print_r($tickets);
	}
if ($route == "tickets/manage") {
    global $database;
    $ticket = getRowById("tickets", $_GET['id']);
    $replies = getTableFiltered("tickets_replies", "ticketid", $_GET['id'], "", "", "*", "id", "DESC");
    $query = $database->query("SELECT tickets_replies.*,ticket_reply_files.id as fileid, ticket_reply_files.name as filename,ticket_reply_files.file "
            . "FROM tickets_replies "
            . "LEFT JOIN ticket_reply_files ON tickets_replies.id = ticket_reply_files.ticket_reply_id "
            . "WHERE tickets_replies.ticketid = " . $_GET['id']
            . " ORDER BY tickets_replies.id DESC"
    );
    $replies = $query->fetchAll();
}

// ISSUS
if ($route == "issues")
    $issues = getTable("issues");

// MONITORING
if ($route == "monitoring") {
    $clients = getTable("clients");
    $hostsUp = getTableFiltered("hosts", "status", "Up");
    $hostsDown = getTableFiltered("hosts", "status", "Down");
    $hostsWarning = getTableFiltered("hosts", "status", "Warning");
    $hosts = getTableFiltered("hosts", "status", "");
    $sumHosts = countTable("hosts");
    $sumHostsUp = countTableFiltered("hosts", "status", "Up");
    $sumHostsDown = countTableFiltered("hosts", "status", "Down");
    $sumHostsWarning = countTableFiltered("hosts", "status", "Warning");
    if ($sumHosts > 0) {
        $percUp = round($sumHostsUp / $sumHosts * 100, 0);
        $percWarning = round($sumHostsWarning / $sumHosts * 100, 0);
        $percDown = round($sumHostsDown / $sumHosts * 100, 0);
    } else {
        $percUp = 0;
        $percWarning = 0;
        $percDown = 0;
    }
}
if ($route == "monitoring/manage") {
    $host = getRowById("hosts", $_GET['id']);
    $admins = getTableFiltered("people", "type", "admin");
    $checksUp = getTableFiltered("hosts_checks", "hostid", $_GET['id'], "status", "Up");
    $checksDown = getTableFiltered("hosts_checks", "hostid", $_GET['id'], "status", "Down");
    $checks = getTableFiltered("hosts_checks", "hostid", $_GET['id'], "status", "");
    $assignedpeople = getTableFiltered("hosts_people", "hostid", $_GET['id']);
}

// REPORTS
if ($route == "reports") {
	 // global $database;
	// $sql = "SELECT clients.id , clients.name"
            // . " FROM clients " 
            // . " ORDER BY clients.name DESC";
    // $query = $database->query($sql);
    // $clients = $query->fetchAll();
	
	
	
	
   $clients = getTableasc("clients");
    $admins = getTableFiltered("people", "type", "admin");
}
if ($route == "reports/view") {
    if ($_GET['report'] == "timesheet") {
        $startdate = $_GET['startDate'] . " 00:00:00";
        $enddate = $_GET['endDate'] . " 00:00:00";
        if ($_GET['clientid'] == "0") {
            $issues = $database->select("issues", "*", [
                "dateadded[<>]" => [$startdate, $enddate]
            ]);
        } else {
            $issues = $database->select("issues", "*", [ "AND" => [
                    "dateadded[<>]" => [$startdate, $enddate],
                    "clientid" => $_GET['clientid']
            ]]);
        }
    }
	
	elseif ($_GET['report'] == "timesheetSummary" && $_GET['forticket'] == "ticket") {
		
		
		
        $startdate = $_GET['startDate'] . " 00:00:00";
        $enddate = $_GET['endDate'] . " 00:00:00";
        if ($_GET['clientid'] == "0") {
           // $assets = getTable("tickets");
		   $assets = $database->select("tickets", "*", [
                "timestamp[<>]" => [$startdate, $enddate]
            ]);
		   
            $licenses = getTable("licenses");
            $issues = $database->select("issues", "*", [
                "dateadded[<>]" => [$startdate, $enddate]
            ]);
        } else {
            //$assets = getTableFiltered("tickets", "clientid", $_GET['clientid']);
			$assets = $database->select("tickets", "*", [ "AND" => [
                    "timestamp[<>]" => [$startdate, $enddate],
                    "clientid" => $_GET['clientid']
            ]]);
            $licenses = getTableFiltered("licenses", "clientid", $_GET['clientid']);
            $issues = $database->select("issues", "*", [ "AND" => [
                    "dateadded[<>]" => [$startdate, $enddate],
                    "clientid" => $_GET['clientid']
            ]]);
        }
    }
	
	
	
	
	
	

	elseif ($_GET['report'] == "timesheetSummary") {
        $startdate = $_GET['startDate'] . " 00:00:00";
        $enddate = $_GET['endDate'] . " 00:00:00";
        if ($_GET['clientid'] == "0") {
            $assets = getTable("assets");
            $licenses = getTable("licenses");
            $issues = $database->select("issues", "*", [
                "dateadded[<>]" => [$startdate, $enddate]
            ]);
        } else {
            $assets = getTableFiltered("assets", "clientid", $_GET['clientid']);
            $licenses = getTableFiltered("licenses", "clientid", $_GET['clientid']);
            $issues = $database->select("issues", "*", [ "AND" => [
                    "dateadded[<>]" => [$startdate, $enddate],
                    "clientid" => $_GET['clientid']
            ]]);
        }
    }
	

	elseif ($_GET['report'] == "summary") {
        if ($_GET['clientid'] == "0") {
            $assets = getTable("assets");
            $licenses = getTable("licenses");
        } else {
            $assets = getTableFiltered("assets", "clientid", $_GET['clientid']);
            $licenses = getTableFiltered("licenses", "clientid", $_GET['clientid']);
        }
    }
}

// CLIENTS
if ($route == "clients") {
    $clients = getTableFiltered("clients", 'is_active', 1);
	
    $months = array(
        '1' => ['Jan', '#337ab7'],
        '2' => ['Feb', '#5cb85c'],
        '3' => ['Mar', '#5bc0de'],
        '4' => ['Apr', '#f0ad4e'],
        '5' => ['May', '#d9534f'],
        '6' => ['Jun', '#F2F271'],
        '7' => ['Jul', '#B26B07'],
        '8' => ['Aug', '#FC0000'],
        '9' => ['Sep', '#1FF21F'],
        '10' => ['Oct', '#42A6F7'],
        '11' => ['Nov', '#025191'],
        '12' => ['Dec', '#EA77F4'],
    );
	
	header("Location:?route=clients/active");
	
//    cs_debug($months);
}

if ($route == "clients/all") {
    $clients = getTable("clients");
	$acclients = getTableFilteredsorbynm("clients", 'is_active', 1);
    $months = array(
        '1' => ['Jan', '#337ab7'],
        '2' => ['Feb', '#5cb85c'],
        '3' => ['Mar', '#5bc0de'],
        '4' => ['Apr', '#f0ad4e'],
        '5' => ['May', '#d9534f'],
        '6' => ['Jun', '#F2F271'],
        '7' => ['Jul', '#B26B07'],
        '8' => ['Aug', '#FC0000'],
        '9' => ['Sep', '#1FF21F'],
        '10' => ['Oct', '#42A6F7'],
        '11' => ['Nov', '#025191'],
        '12' => ['Dec', '#EA77F4'],
    );
//    cs_debug($months);
}

if ($route == "clients/active") {
    $clients = getTableFilteredsorbynm("clients", 'is_active', 1);
	
	
    $months = array(
        '1' => ['Jan', '#337ab7'],
        '2' => ['Feb', '#5cb85c'],
        '3' => ['Mar', '#5bc0de'],
        '4' => ['Apr', '#f0ad4e'],
        '5' => ['May', '#d9534f'],
        '6' => ['Jun', '#F2F271'],
        '7' => ['Jul', '#B26B07'],
        '8' => ['Aug', '#FC0000'],
        '9' => ['Sep', '#1FF21F'],
        '10' => ['Oct', '#42A6F7'],
        '11' => ['Nov', '#025191'],
        '12' => ['Dec', '#EA77F4'],
    );
//    cs_debug($months);
}

if ($route == "clients/inactive") {
    $clients = getTableFilteredsorbynm("clients", 'is_active', 0);
	$acclients = getTableFilteredsorbynm("clients", 'is_active', 1);
    $months = array(
        '1' => ['Jan', '#337ab7'],
        '2' => ['Feb', '#5cb85c'],
        '3' => ['Mar', '#5bc0de'],
        '4' => ['Apr', '#f0ad4e'],
        '5' => ['May', '#d9534f'],
        '6' => ['Jun', '#F2F271'],
        '7' => ['Jul', '#B26B07'],
        '8' => ['Aug', '#FC0000'],
        '9' => ['Sep', '#1FF21F'],
        '10' => ['Oct', '#42A6F7'],
        '11' => ['Nov', '#025191'],
        '12' => ['Dec', '#EA77F4'],
    );
//    cs_debug($months);
}

if ($route == "clients/editinvoice") {
	$invoice = getTableFiltered("invoice", "id", $_GET['id']);
}

if ($route == "clients/manage") {
    $client = getRowById("clients", $_GET['id']);
	
	$contractsdepart = getTableFiltered2("contract", ["clientid" => $_GET['id']], "department", "id", "DESC");
	
    $assets = getTableFiltered("assets", "clientid", $_GET['id']);
    $licenses = getTableFiltered("licenses", "clientid", $_GET['id']);
    $credentials = getTableFiltered("credentials", "clientid", $_GET['id']);
    $issues = getTableFiltered("issues", "clientid", $_GET['id']);
    $tickets = getTableFiltered("tickets", "clientid", $_GET['id']);
    $users = getTableFiltered("people", "clientid", $_GET['id']);
    $admins = getTableFiltered("people", "type", "admin");
    $assignedadmins = getTableFiltered("clients_admins", "clientid", $_GET['id']);
    $sumAssets = countTableFiltered("assets", "clientid", $_GET['id']);
    $sumLicenses = countTableFiltered("licenses", "clientid", $_GET['id']);
    $sumCredentials = countTableFiltered("credentials", "clientid", $_GET['id']);
    $sumUsers = countTableFiltered("people", "clientid", $_GET['id']);
    $sumContract = countTableFiltered("contract", "clientid", $_GET['id']);
    $categories = getTable("assetcategories");
    $files = getTableFiltered("files", "clientid", $_GET['id'], "file[!]", NULL);
    $projects = getTableFiltered("projects", "clientid", $_GET['id']);
    $invoice = getTableFiltered("invoice", "clintid", $_GET['id']);
    $recentcontracts = getTableFiltered2("contract", ["clientid" => $_GET['id']], "*", "id", "DESC", "5");
    $contracts = getTableFiltered2("contract", ["clientid" => $_GET['id']], "*", "id", "ASC");
    $active_contracts = getTableFiltered("contract", "clientid", $_GET['id'], "is_end", 0);
    $end_contracts = getTableFiltered("contract", "clientid", $_GET['id'], "is_end", 1);
    $openTickets = $database->select("tickets", "*", ["AND" => ["status" => ["Open", "Reopened"], "clientid" => $_GET['id']]]);
}

// ADMINS
if ($route == "people/admins")
    $admins = getTableFiltered("people", "type", "admin");
if ($route == "people/admins/profile")
    $admin = getRowById("people", $_GET['id']);

// USERS
if ($route == "people/users") {
    $users = getTableFiltered("people", "type", "user");
}
if ($route == "people/users/profile") {
    $user = getRowById("people", $_GET['id']);
    $clients = getTable("clients");
}

// LABELS
if ($route == "system/labels")
    $labels = getTable("labels");

// ASSET CATEGORIES
if ($route == "system/assetcategories")
    $categories = getTable("assetcategories");
// CONTRACT TYPE
if ($route == "system/contracttype")
    $contracttypes = getTable("contracttype");

// LICENSE CATEGORIES
if ($route == "system/licensecategories")
    $categories = getTable("licensecategories");

// MANUFACTURERS
if ($route == "system/manufacturers")
    $manufacturers = getTable("manufacturers");

// Warehouse
if ($route == "system/warehouselist")
    $warehouse = getTable("warehouse");

// Consumable
if ($route == "system/consumable")
    $consumable = getTable("consumable_list");

//ticketstype
if ($route == "system/tickettype"){
    $configtable = getTable12("config");
}
//ticket subject list
if ($route == "system/ticketsubject")
    $subject = getTable("ticketsubject");

// SUPPLIERS
if ($route == "system/suppliers")
    $suppliers = getTable("suppliers");

// MODELS
if ($route == "system/models") {
    $models = getTable("models");
}

// LOGS
if ($route == "system/logs") {
    $systemLog = getTable("systemlog");
    $emailLog = getTable("emaillog");
    $SMSLog = getTable("smslog");
}

// SYSTEM SETTINGS
if ($route == "system/logs") {
    $emailtemplates = getTable("emailTemplates");
}




// KNOWLEDGE BASE

if ($route == "kb") {

	//isAuthorized("viewKB");



	if($isAdmin) {

		$categories = getTable("kb_categories");



		if(!isset($_GET['id'])) $id = 0; else $id = $_GET['id'];

		$articles = getTableFiltered("kb_articles","categoryid", $id);

	}



	else {

		// get categories

		$categories = getTable("kb_categories");

		foreach($categories as $key => $category) {



			if($category['clients'] == "") unset($categories[$key]);

			else {

				$clients = unserialize($category['clients']);

				if(in_array(0,$clients)) continue;

				else if(!in_array($liu['clientid'],$clients)) unset($categories[$key]);

			}



		}



		// get articles

		if(!isset($_GET['id'])) $id = 0; else $id = $_GET['id'];

		$articles = getTableFiltered("kb_articles", "categoryid", $id);

		foreach($articles as $key => $article) {



			if($article['clients'] == "") unset($articles[$key]);

			else {

				$clients = unserialize($article['clients']);

				if(in_array(0,$clients)) continue;

				else if(!in_array($liu['clientid'],$clients)) unset($articles[$key]);

			}



		}



	}



	//$pageTitle = __("Knowledge Base");



}


/// kb







/* if ($route == "kb") {
	$id=$_GET['routeid'];
    $kb_articles = getTable("kb_articles");
	 $kb_categories = getTable("kb_categories");
	 $kbcategories = getTable("kb_categories", ['id'=>$id]);
	
	 $clients = getTable("clients");
} */


if ($route == "kbedit") {
    $clients = getTable("clients");

}
// CONTRACT
if ($route == "contract") {
    //$contract = getTableFiltered("contract", "clientid[<>]", [1,999998]);//getTable("contract");
    $contracts = getTable("contract");
//    cs_debug($contracts);
}
if ($route == "contract/active") {
    $contracts = getTableFiltered("contract", "is_end", 0); //getTable("contract");
//    cs_debug($contracts);
}
if ($route == "contract/end") {
    $contracts = getTableFiltered("contract", "is_end", 1); //
}
if ($route == "contract/Resume" && $_GET['contractid']) {
   $status = ResumeContract($_GET);
    header("Location:?route=contract/manage&id=" . $_GET['contractid'] . "&status=" . $status);
}

if($route == "contract/create" && $_GET['warehouseid']){
	global $database;
    $clientid = isset($_GET['clientid']) ? $_GET['clientid'] : '';
    $clients = getTable("clients");
//    $admins = getTableFiltered("people", "type", "admin");
//    $users = getTableFiltered("people", "type", "user");
    $models = getTable("models");
//    $manufacturers = getTable("manufacturers");
    $contracttypes = getTable("contracttype");
    $categories = getTable("assetcategories");
	$warehouses = getTable("warehouse");
//    $labels = getTable("labels");
//    $suppliers = getTable("suppliers");
    $assets = getTableFiltered("assets", "status", "Available","warehouseid",$_GET['warehouseid']);
    $query = $database->query("SELECT assets.id, assets.tag, assets.serial, models.name FROM assets JOIN models ON assets.modelid = models.id WHERE assets.clientid = 0");
   // $assets = $query->fetchAll(); //$database->select("assets",["[>]models" => ['assets.modelid' => 'id'],], ['id','tag','models.name' ], 'assets.clientid = 0');
//    var_dump($assets);die();

}elseif ($route == "contract/create") {
    global $database;
    $clientid = isset($_GET['clientid']) ? $_GET['clientid'] : '';
    $clients = getTable("clients");
//    $admins = getTableFiltered("people", "type", "admin");
//    $users = getTableFiltered("people", "type", "user");
    $models = getTable("models");
//    $manufacturers = getTable("manufacturers");
    $contracttypes = getTable("contracttype");
    $categories = getTable("assetcategories");
	 $warehouses = getTable("warehouse");
//    $labels = getTable("labels");
//    $suppliers = getTable("suppliers");
    $assets = $assets = getTableFiltered("assets", "status", "Available");
    $query = $database->query("SELECT assets.id, assets.tag, assets.serial, models.name FROM assets JOIN models ON assets.modelid = models.id WHERE assets.clientid = 0");
   // $assets = $query->fetchAll(); //$database->select("assets",["[>]models" => ['assets.modelid' => 'id'],], ['id','tag','models.name' ], 'assets.clientid = 0');
//    var_dump($assets);die();
}


if ($route == "contract/manage") {
    $contract = getRowById("contract", $_GET['id']);
    $clientname = getSingleValue('clients', 'name', $contract['clientid']);
    $clients = getTable("clients");
//    $admins = getTableFiltered("people", "type", "admin");
//    $users = getTableFiltered("people", "type", "user");
    $models = getTable("models");
//    $manufacturers = getTable("manufacturers");
    $contracttypes = getTable("contracttype");
    $categories = getTable("assetcategories");
    $tickets = getTableFiltered("tickets", "contractid", $_GET['id']);
    $consumable = getTableFiltered("consumable", "contract", $_GET['id']);
    $files = getTableFiltered("contract_files", "contractid", $_GET['id'], "file[!]", NULL);
	$lastcontract = getlastdata('contract_usages','*', array("contractid" => $_GET['id']));

	
	if($_GET['sfdate'] && $_GET['efdate']){
		$sfdate = $_GET['sfdate'];
		$efdate = $_GET['efdate'];
	
	$contract_usages = $database->select("contract_usages", "*", [ "AND" => ["enddate[<>]" => [$sfdate, $efdate],"contractid" => $_GET['id']]]);
	}else{
	$contract_usages = getTableFiltered("contract_usages", "contractid", $_GET['id']);	
	}	
    $query = $database->query("SELECT assets.*, models.name as model_name FROM assets JOIN models ON assets.modelid = models.id WHERE assets.clientid = 0 OR assets.id = " . $contract['assetid']);
    $assets = $query->fetchAll();
	
	//echo $contract['contractno'];
	
	
	$allsame = getTableFiltered("contract", "contractno",$contract['contractno']);
	$histories = array();
	$histo = array();

	
	foreach($allsame as $same){
	 $his = array();

    $query = $database->query("SELECT contract_history.id as history_id,contract_history.deployeddate, contract_history.pulledoutdate,contract_history.memo,contract_history.maintenance, assets.*, models.name as model_name "
            . "FROM contract_history "
            . "LEFT JOIN assets ON assets.id = contract_history.assetid "
            . "LEFT JOIN models ON assets.modelid = models.id "
            . "WHERE contract_history.contractid = " . $same['id']
            . " ORDER BY contract_history.id DESC"
    );

    $his = $query->fetchAll();

	array_push($histo,$his);
	}

	foreach($histo as $history){
		
		foreach($history as $hist){
			
			array_push($histories,$hist);
			
		}
		
		
	}

}

if ($route == "contract/get_asset") {
    global $database;

    $sql = "SELECT assets.*, models.name as model_name,manufacturers.name as asset_type "
            . "FROM assets "
            . "LEFT JOIN models ON assets.modelid = models.id "
            . "LEFT JOIN manufacturers ON manufacturers.id = assets.manufacturerid WHERE assets.id = " . $_GET['id'];

    $query = $database->query($sql);
    //die($database->last_query());
    $asset = $query->fetch();
    die(json_encode($asset));
}

if ($route == "contract/replaceassets"&& $_GET['wh']) {
    global $database;
			$assets = getTableFiltered("assets", "status", "Available","warehouseid",$_GET['wh']);
			$assettotalCount = $database->count("assets", "status", "Available","warehouseid",$_GET['wh']);
   
}elseif ($route == "contract/replaceassets") {
    global $database;
			$assets = getTableFiltered("assets", "status", "Available");
			$assettotalCount = $database->count("assets","status", "Available");
   
}
if ($route == "contract/endcontract") {
	$status = endcontract($_GET['coid']);

   header("Location:?route=" . $_GET['reroute'] . "&id=" . $_GET['id']);
}
if ($route == "contract/get_contracttype") {
    global $database;

    $contracttype = getRowById("contracttype", $_GET['id']);
    die(json_encode($contracttype));
}

if ($route == "tickets/get_contract") {
    global $database;

    $query = $database->query("SELECT contract.id,contract.contractno,contract.department, assets.tag as asset_tag, assets.serial, models.name as asset_model "
            . "FROM contract "
            . "LEFT JOIN assets ON assets.id = contract.assetid "
            . "LEFT JOIN models ON assets.modelid = models.id "
            . "WHERE contract.clientid=" . $_GET["clientid"] . " AND contract.is_end=0"
            . " ORDER BY contract.id DESC"
    );

    //$query = $database->query("SELECT id , contractno FROM contract WHERE clientid=" . $_GET["clientid"]);
    $contracts = $query->fetchAll();
    $query2 = $database->query("SELECT id , name, email FROM people WHERE clientid=" . $_GET["clientid"]);
    $users = $query2->fetchAll();
    $response = array('contracts' => [], 'users' => []);
    foreach ($contracts as $contract) {
        $response['contracts'][] = array('id' => $contract['id'], 'text' => $contract['contractno'] . " " . $contract['asset_tag'] . ":" . $contract['asset_model'] . " " . $contract['department']);
    }
    foreach ($users as $user) {
        $response['users'][] = $user;
    }
//getTableFiltered2("contract",["clientid" => $_GET["clientid"] ], ["id", "contractno as text"]);
    die(json_encode($response));
}

if ($route == "pdf/contract_history") {
    global $database, $mpdf;
//    $history = getRowById("contract_history", $_GET['id']);
    $sql = "SELECT contract_history.id as history_id,contract_history.deployeddate, "
            . " contract_history.pulledoutdate,contract_history.memo,contract_history.maintenance, "
            . " contract.contractno, contract.contract_amount, contract.template, contract.contract_expiry, "
            . " assets.tag, assets.name as assetname, assets.serial, "
            . " models.name as model_name, contracttype.name as contracttype "
            . " FROM contract_history "
            . " JOIN assets ON assets.id = contract_history.assetid "
            . " JOIN models ON assets.modelid = models.id "
            . " JOIN contract ON contract_history.contractid = contract.id "
            . " JOIN contracttype ON contract.contracttype = contracttype.id "
          //  . " WHERE contract_history.id = " . $_GET['id']
            . " ORDER BY contract_history.id DESC";
//    cs_debug($sql); 
    $query = $database->query($sql);
    //$histories = getTableFiltered("contract_history", "contractid", $_GET['id']);

    $histories = $query->fetchAll();
    $history = $histories[0];
//    cs_debug($history); 
    ob_start();
    include($scriptpath . DIRECTORY_SEPARATOR . 'template' . DIRECTORY_SEPARATOR . $lia['type'] . DIRECTORY_SEPARATOR . 'pages' . DIRECTORY_SEPARATOR .$route.'.html');
    $html = ob_get_contents();
    ob_end_clean();

    ini_set('memory_limit', '32M'); // boost the memory limit if it's low <img src="https://s.w.org/images/core/emoji/72x72/1f609.png" alt="ðŸ˜‰" draggable="false" class="emoji">
    //this the the PDF filename that user will get to download
    $pdfFilePath = "_contract.pdf";

    //generate the PDF from the given html
    $mpdf->WriteHTML($html);

    //download it.
    $mpdf->Output($pdfFilePath, "I");
    exit;
}
if ($route == "pdf/ticketsfil") {
    global $database, $mpdf, $scriptpath;
//    $history = getRowById("contract_history", $_GET['id']);

if($_GET['sfdate'] && $_GET['efdate'] && $_GET['companyname']){
	
	
	 $startdate = $_GET['sfdate'] . " 00:00:00";
        $enddate = $_GET['efdate'] . " 00:00:00";
       
            $tickets = $database->select("tickets", "*",
			[
			"AND" =>[
				"clientid"=> $_GET['companyname'],
                "timestamp[<>]" => [$startdate, $enddate]
			]	
            ]);
      
	
}elseif($_GET['sfdate'] && $_GET['efdate']){
	
	
	 $startdate = $_GET['sfdate'] . " 00:00:00";
        $enddate = $_GET['efdate'] . " 00:00:00";
       
            $tickets = $database->select("tickets", "*", [
                "timestamp[<>]" => [$startdate, $enddate]
            ]);
      
  
	
	
	
}elseif($_GET['companyname']){
		
			
		  global $database;	
		 $query = $database->query("SELECT *
  FROM tickets
   WHERE clientid = ".$_GET['companyname']."
   
 ORDER BY  
          CASE 
            WHEN status = 'open' 
              THEN UNIX_TIMESTAMP(timestamp) END,
          CASE 
            WHEN status <> 'open' 
              THEN UNIX_TIMESTAMP(timestamp) END DESC
			  "   	
			);
			
$tickets = $query->fetchAll();	

		}else{
			global $database;
  //  $tickets = getticketTable("tickets");
$query = $database->query("SELECT *
  FROM tickets
 ORDER BY  
          CASE 
            WHEN status = 'open' 
              THEN UNIX_TIMESTAMP(timestamp) END,
          CASE 
            WHEN status <> 'open' 
              THEN UNIX_TIMESTAMP(timestamp) END DESC" );
$tickets = $query->fetchAll();
			
	
		}
		
    
    ob_start();
    include($scriptpath . DIRECTORY_SEPARATOR . 'template' . DIRECTORY_SEPARATOR . $lia['type'] . DIRECTORY_SEPARATOR . 'pages' . DIRECTORY_SEPARATOR . $route . '.php');
    $html = ob_get_contents();
    ob_end_clean();
//exit();

    ini_set('memory_limit', '64M'); // boost the memory limit if it's low <img src="https://s.w.org/images/core/emoji/72x72/1f609.png" alt="ðŸ˜‰" draggable="false" class="emoji">
    //this the the PDF filename that user will get to download
    $pdfFilePath = "tiketsfil_report.pdf";

    //generate the PDF from the given html
    $mpdf->WriteHTML($html);

    //download it.
    $mpdf->Output($pdfFilePath, "I");
    exit;
}




if ($route == "pdf/ticket_report") {
    global $database, $mpdf, $scriptpath;
//    $history = getRowById("contract_history", $_GET['id']);
    $sql = "SELECT tickets.ticket, tickets.subject, tickets.timestamp, clients.name as client "
            . " FROM tickets "
            . " LEFT JOIN clients ON clients.id = tickets.clientid "
            . " WHERE tickets.id = " . $_GET['id'];
//    cs_debug($sql); 
    $query = $database->query($sql);
    //$histories = getTableFiltered("contract_history", "contractid", $_GET['id']);

    $ticket = $query->fetch();
//    cs_debug($ticket); 
    ob_start();
    include($scriptpath . DIRECTORY_SEPARATOR . 'template' . DIRECTORY_SEPARATOR . $lia['type'] . DIRECTORY_SEPARATOR . 'pages' . DIRECTORY_SEPARATOR . $route . '.php');
    $html = ob_get_contents();
    ob_end_clean();
//exit();

    ini_set('memory_limit', '64M'); // boost the memory limit if it's low <img src="https://s.w.org/images/core/emoji/72x72/1f609.png" alt="ðŸ˜‰" draggable="false" class="emoji">
    //this the the PDF filename that user will get to download
    $pdfFilePath = "tiket_report_" . $ticket['ticket'] . ".pdf";

    //generate the PDF from the given html
    $mpdf->WriteHTML($html);

    //download it.
    $mpdf->Output($pdfFilePath, "I");
    exit;
}

if ($route == "pdf/issue_invoice") {
    global $database, $mpdf, $scriptpath;
    $doc_no = getDocNo();
    $clientname = getSingleValue('clients', 'name', $_GET['clientid']);
    $m = $_GET['month'];
    $month = getMonthName($m);
    $y = date('Y');
    $sql = "SELECT contract.id as contract_id, contract.contractno, contract.contract_amount, contract.department, contract.created_date, "
            . " assets.tag, assets.name as assetname, assets.serial, models.name as model_name, assets.caseserial "
            . " FROM contract "
            . " LEFT JOIN assets ON assets.id = contract.assetid "
            . " LEFT JOIN models ON assets.modelid = models.id "
            . " WHERE contract.is_end = 0 AND contract.clientid = " . $_GET['clientid']
            . " ORDER BY contract.id DESC";
    $query = $database->query($sql);
    $contracts = $query->fetchAll();
    if ($contracts) {
        ob_start();
        include($scriptpath . DIRECTORY_SEPARATOR . 'template' . DIRECTORY_SEPARATOR . $lia['type'] . DIRECTORY_SEPARATOR . 'pages' . DIRECTORY_SEPARATOR . $route . '.php');
        $html = ob_get_contents();
        ob_end_clean();

        ini_set('memory_limit', '64M'); // boost the memory limit if it's low <img src="https://s.w.org/images/core/emoji/72x72/1f609.png" alt="ðŸ˜‰" draggable="false" class="emoji">
        //this the the PDF filename that user will get to download
        $pdfFilePath = "invoice.pdf";

        //generate the PDF from the given html
        $mpdf->WriteHTML($html);

        //download it.
        $mpdf->Output($pdfFilePath, "I");
        exit;
    } else {
        die('No contract to print invoice!');
    }
}

// SUPPLIERS
if ($route == "email"){
    $clients = getTableFiltered("clients", 'is_active', 1);
}

if ($route == "printlable"){
	// echo'<pre>';
	// print_r($_POST);
	// echo'</pre>';
	// die('grgr');
	
	global $database, $mpdf, $scriptpath;
	if(isset($_POST['check'])){
		$conno = $_POST['check'];
		foreach($conno as $conn){
   // $clientname = getSingleValue('clients', 'name', $_GET['id']);
    $sql = "SELECT contract.id as contract_id, contract.contractno,"
            . " assets.tag, assets.name as assetname, assets.serial, models.name as model_name, assets.caseserial, assets.sku, "
            . " clients.name as cname "
            . " FROM contract "
            . " LEFT JOIN clients ON clients.id = contract.clientid "
            . " LEFT JOIN assets ON assets.id = contract.assetid "
            . " LEFT JOIN models ON assets.modelid = models.id "
            . " WHERE contract.is_end = 0 AND contract.id = " . $conn
            . " ORDER BY contract.id DESC";
    $query = $database->query($sql);
    $contr = $query->fetchAll();
	$contracts[] = $contr[0];
		}
    if ($contracts) {
        ob_start();
        include($scriptpath . DIRECTORY_SEPARATOR . 'template' . DIRECTORY_SEPARATOR . $lia['type'] . DIRECTORY_SEPARATOR . 'pages' . DIRECTORY_SEPARATOR . $route . '.php');
        $html = ob_get_contents();
        ob_end_clean();

        ini_set('memory_limit', '64M');
        $pdfFilePath = "invoice.pdf";

        
        $mpdf->WriteHTML($html);    		//generate the PDF from the given html

        $mpdf->Output($pdfFilePath, "I");		 //download it.
        exit;
    } else {
        die('No contract to print invoice!');
    }
	}
	header("Location:?route=clients/manage&id=" . $_GET['id'] . "&status=16");
}

if ($route == "slide"){
	$clients = getTableasc("slider", "*", "groupnm");
}

if ($route == "slide/edit"){
	$clients = getTableFiltered("slider", "id", $_GET['id']);
}
	
if ($route == "slide/allgroup"){
	$clients = getTableasc("slider_group", "*", "groupnm");
}

if (isset($_POST['editslidtext'])) {
    $status = editslidtext($_POST);
    header("Location:?route=" . $_POST['route'] . "&status=" . $status);
}

//if ($route == "pdf/issue_invoice") {
//    global $database, $mpdf, $scriptpath;
//    
//    $doc_no = getDocNo();
//    $pdfFilePath = "issue_invoice.pdf";
//
//    $app_name = getConfigValue("app_name");
//    $clientname = getSingleValue('clients', 'name', $_GET['clientid']);
//    $m = $_GET['month'];
//    $y = date('Y');
//    $sql = "SELECT contract.id as contract_id, contract.contractno, contract.contract_amount, contract.department, contract.created_date, "
//            . " assets.tag, assets.name as assetname, assets.serial, models.name as model_name "
//            . " FROM contract "
//            . " LEFT JOIN assets ON assets.id = contract.assetid "
//            . " LEFT JOIN models ON assets.modelid = models.id "
//            . " WHERE MONTH(contract.created_date) = '" . $m . "' AND YEAR(contract.created_date) = '" . $y . "' AND is_end = 0 AND contract.clientid = " . $_GET['clientid']
//            . " ORDER BY contract.id DESC";
//    $query = $database->query($sql);
//    $contracts = $query->fetchAll();
//    if($contracts) {
//        //header('Content-Disposition: attachment;');
//    header("Content-type:application/pdf");
//
//// It will be called downloaded.pdf
//header("Content-Disposition:attachment;filename='Invoice.pdf'");
//
//// The PDF source is in original.pdf
////readfile("original.pdf");
//    $month = date('M', strtotime($contracts[0]['created_date']));
//    
//    ob_start();
//    require_once ($scriptpath . DIRECTORY_SEPARATOR . 'template' . DIRECTORY_SEPARATOR . $lia['type'] . DIRECTORY_SEPARATOR . 'pages' . DIRECTORY_SEPARATOR . $route . '.php');
//    $html = ob_get_contents();
//    ob_end_clean();
////exit();
//
//    ini_set('memory_limit', '64M'); // boost the memory limit if it's low <img src="https://s.w.org/images/core/emoji/72x72/1f609.png" alt="ðŸ˜‰" draggable="false" class="emoji">
//    //this the the PDF filename that user will get to download
//    
//    //generate the PDF from the given html
//    $mpdf->WriteHTML($html);
////var_dump( $database->log() );die();
//    //download it.
//    $mpdf->Output($pdfFilePath, "I");
//    die();
//    } else {
//        die('No contract to print invoice!');
//    }
//}
